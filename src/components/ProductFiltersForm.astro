---
import CMS from "@store/CMS";

const { size, variant, locale, availableSizes, availableVariants, recurData } =
  Astro.props;

const productSizes = CMS.get("productSizes"),
  productVariants = CMS.get("productVariants");
---

<form id="product-filters" class="flex flex-wrap items-center gap-6">
  <select
    id="tea_variant"
    name="tea_variant"
    class:list={[
      "focus:ring focus:ring-emerald-800 focus:ring-opacity-20 focus:outline-none",
      "text-lg leading-[150%] text-lightgray2 py-[9px] pl-5 border-r-[20px]",
      "border-primary bg-primary rounded-full cursor-pointer",
    ]}
  >
    <option value="" selected>{recurData.text_all_tea_variants}</option>

    {
      productVariants.data
        .map(({ attributes: { Title, localizations } }) => {
          const localizedVariant =
            locale === "en"
              ? Title
              : localizations.data.find(
                  ({ attributes }) =>
                    attributes.locale.substring(0, 2) === locale
                )?.attributes.Title;

          if (
            localizedVariant &&
            (!availableVariants || availableVariants.includes(Title))
          ) {
            const slug =
              Title.toLowerCase().replaceAll(" ", "-") +
              (size ? "/" + size?.toLowerCase().replaceAll(" ", "-") : "");

            return { slug, Title, localizedVariant };
          }
        })
        .filter(Boolean)
        .sort((a, b) =>
          a.localizedVariant.localeCompare(b.localizedVariant, locale, {
            numeric: true,
          })
        )
        .map(({ slug, Title, localizedVariant }) => (
          <option value={Title} data-slug={slug} selected={variant === Title}>
            {localizedVariant}
          </option>
        ))
    }
  </select>

  <select
    id="tea_size"
    name="tea_size"
    class:list={[
      "focus:ring focus:ring-emerald-800 focus:ring-opacity-20 focus:outline-none",
      "text-lg leading-[150%] text-lightgray2 py-[9px] pl-5 border-r-[20px]",
      "border-primary bg-primary rounded-full cursor-pointer",
    ]}
  >
    <option value="" selected>{recurData.text_all_tea_sizes}</option>

    {
      productSizes.data
        .map(({ attributes: { Title, localizations } }) => {
          const localizedSize =
            locale === "en"
              ? Title
              : localizations.data.find(
                  ({ attributes }) =>
                    attributes.locale.substring(0, 2) === locale
                )?.attributes.Title;

          if (
            localizedSize &&
            (!availableSizes || availableSizes.includes(Title))
          ) {
            const slug =
              (variant
                ? variant?.toLowerCase().replaceAll(" ", "-") + "/"
                : "") + Title.toLowerCase().replaceAll(" ", "-");

            return { slug, Title, localizedSize };
          }
        })
        .filter(Boolean)
        .sort((a, b) =>
          a.localizedSize.localeCompare(b.localizedSize, locale, {
            numeric: true,
          })
        )
        .map(({ slug, Title, localizedSize }) => (
          <option value={Title} data-slug={slug} selected={size === Title}>
            {localizedSize}
          </option>
        ))
    }
  </select>
</form>
