---
import { parseHTML } from "linkedom";
import rightArrowGreen from "@images/rightArrowGreen.svg";

declare interface Props {
  type?: "desktop" | "mobile";
}

const { type = "desktop" } = Astro.props as Props,
  contentHTML = await Astro.slots.render("default"),
  { document: contentDocument } = await parseHTML(contentHTML),
  headings = contentDocument.querySelectorAll("h2");
---

<style lang="scss">
  @use "src/styles/colors";

  a {
    @apply inline-flex items-center;

    color: colors.$sticky-dropdown-item;

    img {
      width: clamp(35px, 4.6875vw - 18.75px, 45px);
      margin-right: clamp(10px, 4.6875vw - 43.75px, 20px);
    }

    &.chapter-link {
      &:not(.active) img {
        @apply md:opacity-0;
      }

      &.active {
        @apply md:font-bold;
      }
    }

    &.chapter-link-sm {
      &:not(.active) img {
        opacity: 0;
      }

      &.active {
        font-weight: 500;
        color: rgba(43, 75, 80, 0.8);
      }
    }
  }
</style>

{
  [...headings].map(({ id, innerText }, i) => (
    <a
      href={"#" + id}
      class:list={[
        i === 0 && "active",
        type !== "mobile"
          ? "chapter-link"
          : "chapter-link-sm flex items-center pt-6 font-normal",
      ]}
    >
      <img
        src={rightArrowGreen}
        alt="Green Right Arrow"
        class:list={[
          "h-full",
          type === "mobile" && "w-[15px] h-full mr-[10px]",
        ]}
      />
      <Fragment set:text={innerText} />
    </a>
  ))
}
