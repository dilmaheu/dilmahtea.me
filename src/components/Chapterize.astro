---
import he from "he";
import { parseHTML } from "linkedom";

let contentHTML = he.decode(await Astro.slots.render("default"));

const { document: contentDocument } = parseHTML(contentHTML),
  astroIslands = contentDocument.querySelectorAll("astro-island");

let headings = contentDocument.querySelectorAll("h2");

// wrap every heading and its following content with div.chapter

astroIslands.forEach((island) => {
  let islandHTML = island.innerHTML;

  headings.forEach((heading, i) => {
    if (islandHTML.includes(heading.outerHTML)) {
      islandHTML = islandHTML.replace(
        heading.outerHTML,
        (i === 0 ? "" : "</div>") +
          `<div id=${heading.innerText
            ?.toLowerCase()
            ?.replaceAll(" ", "-")} class='chapter'>` +
          heading.outerHTML,
      );

      delete headings[i];
    }
  });

  headings.length > 0 && (islandHTML += "</div>");

  contentHTML = contentHTML.replace(island.innerHTML, islandHTML);
});

// @ts-ignore
headings = [...headings].filter(Boolean);

headings.forEach((heading, i) => {
  const decodedHeadingOuterHTML = he.decode(heading.outerHTML);

  [
    decodedHeadingOuterHTML,
    decodedHeadingOuterHTML.replace(/(?<=(data-astro-cid-\w+))=""/g, ""),
  ].forEach((headingOuterHTML) => {
    contentHTML = contentHTML.replace(
      headingOuterHTML,
      (i === 0 ? "" : "</div>") +
        `<div id="${heading.innerText
          ?.toLowerCase()
          ?.replaceAll(" ", "-")}" class='chapter'>` +
        heading.outerHTML,
    );
  });
});

headings.length > 0 && (contentHTML += "</div>");
---

<Fragment set:html={contentHTML} />
