---
import { Picture } from "astro-imagetools/components";

import Markdown from "@components/Markdown.astro";
import AuthorInfo from "@components/AuthorInfo.astro";

import RecurringImages from "@store/RecurringImages";

const { ariaLabel, isEven, postImgURL, altText, sizes, postLeafWidthMultiplier, locale, authors, createdAt, postURL, postTitle, introText, leafVisible, greenCupVisible, clipPathValue } = Astro.props;

const {
    green_cup,
    left_post_leaf,
    green_leaf: right_post_leaf,
} = RecurringImages;

---

<style lang="scss">
    .post-leaf {
      @apply absolute z-20;
      filter: drop-shadow(0px 8px 9px rgba(0, 0, 0, 0.5));
    }
  
    .post-leaf-left {
      @apply -top-[6.5%] left-[3%] sm:-left-[1%] w-[24%] h-auto;
    }
  
    .post-leaf-right {
      @apply sm:right-0 bottom-[7%] w-[18%] h-auto;
  
      @media (max-width: 639.98px) {
        @apply -left-[5%] bottom-[6%];
      }
    }
</style>


<div
    role="listitem"
    aria-label={ariaLabel}
    class="link-section grid sm:grid-cols-2 items-center division-gap"
>
    <div
    class:list={[
        "relative post-img-curve-container",
        !isEven && "sm:order-2 ml-auto",
    ]}
    >
        <Picture
            layout="fill"
            src={postImgURL}
            alt={altText}
            sizes={sizes}
            attributes={{
            picture: { style: `clip-path: url(${clipPathValue});`},
            }}
        />

        {leafVisible && (
            <div
                class:list={[
                "post-leaf",
                isEven ? "post-leaf-left" : "post-leaf-right",
                ]}
            >
                <Picture
                alt=""
                layout="fill"
                placeholder="blurred"
                src={(isEven ? left_post_leaf : right_post_leaf).src}
                sizes={[
                    `(min-width: 640px) min(600px, calc((50vw - min(100px, 5vw)) * ${postLeafWidthMultiplier}))`,
                    `calc(90vw * ${postLeafWidthMultiplier})`,
                ].join(", ")}
                />
            </div>
        )}
    </div>

    {/* Text content */}
    <div
        class:list={["grid division-in-gap", !isEven & "sm:order-1"]}
    >
        <AuthorInfo
            locale={locale}
            authors={authors}
            createdAt={createdAt}
            color={"black-light"}
        />

        <h2 class="text-h2 text-primary">
            <a
                class="main-link"
                href={postURL}
                set:text={postTitle}
            />
            {greenCupVisible && (
                <span class="icon heading-inline-icon ml-2">
                    <img class="w-full h-full" {...green_cup} />
                </span>
            )}   
        </h2>
        <div class="post-intro intro-text">
            <Markdown>{introText}</Markdown>
        </div>
    </div>
</div>


