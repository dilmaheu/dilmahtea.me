---
import fs from "fs/promises";

declare interface Props {
  type?: "error" | "warning" | "info" | "success" | "default";
  closingEnabled?: boolean;
}

const { type = "default", closingEnabled = false } = Astro.props as Props;

if (type !== "default") {
  var notificationSVG = await fs.readFile(
    `./public/images/notifications/${type}.svg`,
    "utf8"
  );
}
---

<style lang="scss">
  $notification-error-bg-color: #f9eae9;
  $notification-warning-bg-color: #faf2e5;
  $notification-info-bg-color: #e7eef9;
  $notification-success-bg-color: #e9f9ef;
  $notification-default-bg-color: #fbf7f7;
  $notification-default-text-color: #000000;

  .notification {
    display: none;
    padding: 1rem;
    position: relative;
    font-family: "Roboto";
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    line-height: 18.75px;
    color: $notification-default-text-color;

    &.notification-error {
      background-color: $notification-error-bg-color;
    }

    &.notification-warning {
      background-color: $notification-warning-bg-color;
    }

    &.notification-info {
      background-color: $notification-info-bg-color;
    }

    &.notification-success {
      background-color: $notification-success-bg-color;
    }

    > div {
      display: flex;
      gap: 1.125rem;
      margin: 0 auto;
      align-items: center;
      justify-content: space-evenly;
    }
  }
</style>

<div class={`notification notification-${type}`}>
  <div>
    {notificationSVG && (
      <div>
        <Fragment set:html={notificationSVG} />
      </div>
    )}

    <div>
      <slot />
    </div>
  </div>

  {closingEnabled && (
    <button class="close-button">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        fill="none"
      >
        <path
          fill-rule="evenodd"
          d="M4.3 4.3a1 1 0 0 1 1.4 0L10 8.6l4.3-4.3a1 1 0 1 1 1.4 1.4L11.4 10l4.3 4.3a1 1 0 0 1-1.4 1.4L10 11.4l-4.3 4.3a1 1 0 0 1-1.4-1.4L8.6 10 4.3 5.7a1 1 0 0 1 0-1.4Z"
          fill="#4c4847"
        />
      </svg>
    </button>
  )}
</div>

<script>
  const notificationCloseButtons = document.querySelectorAll(
    ".notification .close-button"
  );

  notificationCloseButtons.forEach((button) => {
    button.addEventListener("click", () => {
      // @ts-ignore
      removeTopNotification(
        button.parentElement
      ); /* this function is declared in the Layout.astro file */
    });
  });
</script>
