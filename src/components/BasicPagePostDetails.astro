---
import { parseHTML } from "linkedom";

import Chapters from "@components/Chapters.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";
import HeadingLinks from "@components/HeadingLinks.astro";
import ChaptersFunctionality from "@components/scripts/ChaptersFunctionality.astro";

import RecurringImages from "@store/RecurringImages";

const { green_book } = RecurringImages;

const { page, recurData, ariaLabelRecurData } = Astro.props;

const contentHTML = await Astro.slots.render("post-details"),
  { document: contentDocument } = parseHTML(contentHTML),
  headings = contentDocument.querySelectorAll("h2");
---

<style lang="scss">
  @use "src/styles/colors";

  #sticky-chapters {
    box-shadow: 0 4px 5px gray;
  }

  #sticky-chapter-links {
    border-color: colors.$primary-light;
  }

  #reading-progress-bar {
    border-top-right-radius: 0.127rem;
    border-bottom-right-radius: 0.157rem;
  }

  #headings-header {
    font-size: clamp(1.5rem, 2.2vw + 0.15rem, 2rem);
  }

  #chapter-links {
    font-size: clamp(1rem, 1.2vw + 0.2rem, 1.5rem);
  }
</style>

<ClipPathSVG
  id="content-images-curve"
  path="M.516.008C.36.008.1-.008.04.082S.002.495.017.736.182 1 .528 1C.813 1 .902.936.974.717 1.005.624 1.021.395.945.128.897-.045.734.008.516.008"
/>

<h2
  class="wrapper heading-primary text-primary text-center leading-[115%] font-bold mt-[50px]"
>
  {page.Heading_block}
</h2>

<section class="mt-[50px]" aria-label={ariaLabelRecurData.Post_details_text}>
  {
    headings.length > 0 && (
      <Chapters
        fixedTop={true}
        headingName={recurData.text_chapter}
        headings={headings}
      />
    )
  }

  <div
    class="wrapper w-full flex flex-col-reverse md:flex-row justify-between gap-[50px]"
  >
    <div id="post-details" class="md:w-2/3 2xl:w-1/2">
      <div class="prose-text xl:w-5/6 2xl:w-full">
        {/* post content */}
        <slot name="post-details" />
      </div>
    </div>

    {
      headings.length > 0 && (
        <Chapters headingName={recurData.text_chapter} headings={headings} />
      )
    }
  </div>
</section>

{headings.length > 0 && <ChaptersFunctionality />}
