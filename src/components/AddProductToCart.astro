---
const { STRAPI_URL } = import.meta.env;

const { productsToBeAvailableOnClient } = Astro.props;

const productsRecord = Object.fromEntries(
  await Promise.all(
    productsToBeAvailableOnClient.map(async (product) => {
      const { SKU, names, Intro_blob, Price, productVariant, productSize } =
        product;

      const tax = Math.round(Number(Price) * 9) / 100,
        productThumbnailURL = await importImage(
          STRAPI_URL + Intro_blob.data.attributes.formats.thumbnail.url,
        );

      return [
        SKU,
        {
          sku: SKU,
          names: JSON.stringify(names),
          image: productThumbnailURL,
          price: Price + tax,
          tax,
          tea_variant: productVariant,
          tea_size: productSize,
        },
      ];
    }),
  ),
);
---

<script define:vars={{ productsRecord }}>
  const productCardBtns = document.querySelectorAll(".product-card-btn");

  productCardBtns.forEach((button) => {
    button.addEventListener("click", () => {
      const { sku } = button.dataset;

      const product = productsRecord[sku],
        inCartProduct = window.cart[sku];

      const quantity = 1 + (inCartProduct?.quantity || 0);

      (product.price = +(product.price * quantity).toFixed(2)),
        (product.tax = +(product.tax * quantity).toFixed(2));

      const productData = {
        ...product,
        quantity,
      };

      window.cart[sku] = productData;

      window.openCart();
    });
  });
</script>
