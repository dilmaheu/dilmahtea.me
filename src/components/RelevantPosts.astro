---
import { Picture } from "astro-imagetools/components";

import Markdown from "@components/Markdown.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";

import CMS from "@store/CMS";
import RecurringImages from "@store/RecurringImages";

const { green_right_arrow, white_right_arrow } = RecurringImages;

const { page, text, posts, heading, curved_bg, product } = Astro.props,
  { locale } = page,
  { STRAPI_URL } = import.meta.env;

const recurData = CMS.get("recurringElement", locale),
  ariaLabelRecurData = CMS.get("ariaLabelRecurringElement", locale);

const headingName = heading || recurData.text_explore_the_world_of_kindness;

const allPosts = curved_bg ? posts : posts.slice(0, 3);
---

<style lang="scss">
  .section-curve-top,
  .section-curve-bottom {
    // height value clamp should be as section-in-v-pad-sm
    @apply absolute w-full bg-primary
      h-[calc(clamp(25px,calc(3.125vw+5px),50px)+1px)];
  }

  .section-curve-top {
    clip-path: url(#section-top-curve-sm);

    @media (min-width: 768px) {
      clip-path: url(#section-top-curve);
    }
  }

  .section-curve-bottom {
    clip-path: url(#section-bottom-curve-sm);

    @media (min-width: 768px) {
      clip-path: url(#section-bottom-curve);
    }
  }
</style>

{
  allPosts?.length > 0 && (
    <section role="complementary" class="mb-[50px]">
      <ClipPathSVG
        id="blob-card-curve"
        path="M0.99,0.554 V0.735 c0,0.331,-0.079,0.243,-0.519,0.258 S0.004,1,0.004,0.718 c0,-0.037,0.004,-0.093,0.001,-0.164 C-0.005,0.353,-0.003,0.148,0.042,0.078 C0.102,-0.013,0.358,0.003,0.513,0.003 c0.216,0,0.41,-0.034,0.459,0.141 C1,0.309,0.995,0.441,0.99,0.554"
      />

      {curved_bg && (
        <>
          <ClipPathSVG
            id="section-top-curve"
            path="M1,0.582 V1 H0 V0.582 S0.073,0.358,0.136,0.295 c0.103,-0.103,0.245,0.128,0.348,0.173 C0.602,0.52,0.729,0.058,0.847,0.003 L0.861,0 C0.965,0,1,0.582,1,0.582"
          />

          <ClipPathSVG
            id="section-top-curve-sm"
            path="M1,0.892 V1 H0 V0.892 c0.059,-1.237,0.238,-0.517,0.321,-0.517 S0.499,0.133,0.639,0.033 a0.799,4,0,0,1,0.088,-0.033 C0.84,0,0.951,0.193,1,0.892"
          />

          <ClipPathSVG
            id="section-bottom-curve"
            path="M1,0 c-0.005,0.158,-0.026,0.437,-0.104,0.633 c-0.115,0.288,-0.242,-0.102,-0.316,-0.102 c-0.07,0,-0.171,0.017,-0.231,0.185 c-0.057,0.16,-0.132,0.283,-0.193,0.283 C0.032,1,0,0.633,0,0.633 V0"
          />

          <ClipPathSVG
            id="section-bottom-curve-sm"
            path="M1,0 V0.722 c-0.095,0.278,-0.193,0,-0.324,0 C0.504,0.722,0.369,1,0.22,1 C0.088,1,0,0.382,0,0.382 V0"
          />
        </>
      )}

      <div
        class="relative"
        class:list={[curved_bg && "relative section-in-v-pad-sm"]}
      >
        {curved_bg && <div class="section-curve-top top-0" />}

        <div class:list={[curved_bg && "relative bg-primary z-10"]}>
          <div class:list={["wrapper division-gap grid"]}>
            <div class="division-in-gap grid">
              <h2
                class:list={[
                  "text-h2 text-primary",
                  curved_bg && "text-white text-center",
                ]}
              >
                {headingName}
              </h2>

              {text && (
                <div
                  class:list={[
                    "prose-text",
                    curved_bg && "text-white text-center",
                  ]}
                >
                  <Markdown>{text}</Markdown>
                </div>
              )}
            </div>

            <div
              role="list"
              aria-label={ariaLabelRecurData.Kindness_Items_text}
              class="blob-cards-container"
              class:list={[
                "blob-cards-container",
                curved_bg && "justify-center",
              ]}
            >
              {allPosts.map((post, index) => (
                <div
                  role="listitem"
                  aria-label={
                    ariaLabelRecurData.Kindness_Item_text + (index + 1)
                  }
                  class:list={[
                    "link-section",
                    curved_bg ? "post-card-secondary-light" : "post-card",
                  ]}
                >
                  <Picture
                    layout="fullWidth"
                    alt={post.Intro_blob.data.attributes.alternativeText}
                    src={STRAPI_URL + post.Intro_blob.data.attributes.url}
                    attributes={{ img: { style: "aspect-ratio: 6 / 5;" } }}
                    sizes={[
                      "(min-width: 1024px) calc((100vw - min(200px, 10vw) - (clamp(24px, 3.125vw - 8px, 32px) * 2)) / 3)",
                      "(min-width: 640px) calc(45vw - 16px)",
                      "min(90vw, 380px)",
                    ].join(", ")}
                  />

                  <div class="card-content-container">
                    <div class="product-card-content">
                      {post.authors && (
                        <div class="quick-info-secondary-light-sm">
                          <div
                            role="presentation"
                            aria-label={post.authors.data.map(
                              ({ attributes }, i) =>
                                ariaLabelRecurData.Wrote_by_text +
                                (i > 0 ? ", " : " ") +
                                attributes.givenName,
                            )}
                            class="author-name"
                          >
                            {post.authors.data.map(({ attributes }, index) => (
                              <span>
                                {`${index > 0 ? ", " : " "}` +
                                  attributes.givenName}
                              </span>
                            ))}
                          </div>

                          <div class="quick-info-item">
                            {new Date(post.createdAt).toLocaleString("en-US", {
                              day: "numeric",
                              month: "long",
                            })}
                          </div>
                        </div>
                      )}

                      <div>
                        <a
                          class="main-link post-title"
                          set:text={post.Title}
                          href={`/` + post.Meta.URL_slug}
                        />

                        {!product && (
                          <img
                            class="post-title-icon"
                            {...(curved_bg
                              ? green_right_arrow
                              : white_right_arrow)}
                          />
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {curved_bg && <div class="section-curve-bottom bottom-0" />}
      </div>
    </section>
  )
}
