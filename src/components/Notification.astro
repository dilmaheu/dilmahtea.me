---
import CMS from "@store/CMS";
import RecurringImages from "@store/RecurringImages";

declare interface Notification {
  locale: string;
  Title: string;
  Type: "Error" | "Warning" | "Info" | "Success" | "Default";
  top: boolean;
  Closing_Enabled: boolean;
  Content: string;
}

const { locale, Title, Type, Closing_Enabled } = Astro.props as Notification;

if (Type !== "Default") {
  var icon = RecurringImages[`${Type.toLowerCase()}_notification`];
}

const ariaLabelRecurData = CMS.get("ariaLabelRecurringElement", locale);
---

<style lang="scss">
  $notification-error-bg-color: #f9eae9;
  $notification-warning-bg-color: #faf2e5;
  $notification-info-bg-color: #e7eef9;
  $notification-success-bg-color: #e9f9ef;
  $notification-default-bg-color: #fbf7f7;
  $notification-default-text-color: #000000;

  .notification {
    color: $notification-default-text-color;

    &.notification-error {
      background-color: $notification-error-bg-color;
    }

    &.notification-warning {
      background-color: $notification-warning-bg-color;
    }

    &.notification-info {
      background-color: $notification-info-bg-color;
    }

    &.notification-success {
      background-color: $notification-success-bg-color;
    }
  }
</style>

<div
  class:list={[
    Title,
    `notification notification-${Type.toLowerCase()}`,
    "hidden relative p-5 text-[1rem] leading-[19px] items-center",
  ]}
>
  <div class="mx-auto gap-5 flex items-center">
    {icon && <img {...icon} class="w-[26px] h-[26px]" />}

    <div class="notification-content">
      <slot />
    </div>
  </div>

  {
    Closing_Enabled && (
      <button
        class="close-button"
        aria-label={ariaLabelRecurData?.data?.attributes?.Advanced_notification_close_button_text}
      >
        <svg
          width="15"
          height="14"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fill="#4c4847"
            fill-rule="evenodd"
            d="M.3.4A1.2 1.2 0 0 1 2 .4l5 5 5-5A1.2 1.2 0 1 1 13.7 2l-5 5 5 5a1.2 1.2 0 0 1-1.7 1.7l-5-5-5 5A1.2 1.2 0 0 1 .3 12l5-5-5-5A1.2 1.2 0 0 1 .3.4Z"
          />
        </svg>
      </button>
    )
  }
</div>

<script>
  const notificationCloseButtons = document.querySelectorAll(
    ".notification .close-button",
  );

  notificationCloseButtons.forEach((button) => {
    button.addEventListener("click", () => {
      window.slideOutTopNotification(button.parentElement);
    });
  });
</script>
