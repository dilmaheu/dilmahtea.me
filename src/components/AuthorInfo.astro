---
import CMS from "@store/CMS";
import { Picture } from "astro-imagetools/components";

declare interface Props {
  locale: string;
  authors: Record<string, any>;
  authorImg?: boolean;
  createdAt?: string;
  authorSm?: boolean;
  color: "black-light" | "secondary-light" | "default";
};

const { locale, authors, authorImg, createdAt, authorSm, color } = Astro.props,
  { STRAPI_URL } = import.meta.env;

const ariaLabelRecurData = CMS.get("ariaLabelRecurringElement", locale);
---

{
  authors?.data.length > 0 && (
    <div class="division-in-element-gap flex items-center">
      {authorImg &&
        authors.data.map(
          ({ attributes: { Profile_picture: img } }, index) =>
            img?.data && (
              <div
                class:list={[
                  "quick-info-author-img",
                  index > 0 &&
                    "relative -ml-[clamp(15px,calc(2.5vw-1px),35px)]",
                ]}
              >
                <Picture
                  width={50}
                  height={50}
                  loading="eager"
                  alt={img.data.attributes.alternativeText}
                  src={STRAPI_URL + img.data.attributes.url}
                />
              </div>
            ),
        )}

      <div class:list=[{`quick-info-${color || "default"}${authorSm ? "-sm" : ""}`}]>
        <div
          role="presentation"
          aria-label={authors.data.map(
            ({ attributes }, i) =>
              ariaLabelRecurData.Wrote_by_text +
              (i > 0 ? ", " : " ") +
              attributes.givenName,
          )}
          class="author-name"
        >
          {authors.data.map(({ attributes }, index) => (
            <span>{`${index > 0 ? ", " : " "}` + attributes.givenName}</span>
          ))}
        </div>

        {createdAt && (
          <div class="quick-info-item">
            {new Date(createdAt).toLocaleString("en-US", {
              day: "numeric",
              month: "long",
            })}
          </div>
        )}
      </div>
    </div>
  )
}
