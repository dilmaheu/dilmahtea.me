---
import { Schema } from "astro-seo-schema";

import Markdown from "@components/Markdown.astro";
import Chapterize from "@components/Chapterize.astro";
import OptimizeContentImages from "@components/OptimizeContentImages.astro";

import renderMarkdown from "@utils/renderMarkdown";
import PostDetailsLayout from "@layouts/PostDetailsLayout.astro";

const { page, recurData, ariaLabelRecurData } = Astro.props,
  headingName = recurData.text_chapter,
  { blogs: posts } = page,
  { STRAPI_URL } = import.meta.env;
---

<PostDetailsLayout
  {page}
  {posts}
  {recurData}
  {ariaLabelRecurData}
  {headingName}
>
  <div slot="post-details" class="prose content-text">
    <Chapterize>
      <OptimizeContentImages>
        <Markdown>{page.Block_text}</Markdown>
      </OptimizeContentImages>
    </Chapterize>
  </div>
</PostDetailsLayout>

<Schema
  item={{
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    headline: page.Title,
    alternativeHeadline: `The best things you need to know about ${page.Title}`,
    image: await importImage(STRAPI_URL + page.Intro_blob?.data.attributes.url),
    url: Astro.site.origin + Astro.url.pathname + "/",
    publisher: recurData.Company_name,
    dateCreated: page.createdAt,
    datePublished: page.publishedAt,
    dateModified: page.updatedAt,
    inLanguage: page.locale,
    copyrightYear: `${new Date().getFullYear()}`,
    copyrightHolder: "Dilmah",
    isFamilyFriendly: "True",
    description: `${renderMarkdown(page.Intro_text).replace(
      /(<([^>]+)>)/gi,
      "",
    )}`,
    articleBody: `${renderMarkdown(page.Block_text).replace(
      /(<([^>]+)>)/gi,
      "",
    )}`,
    author: {
      "@type": "Person",
      name: page.authors.data.map(
        ({ attributes }) => `${attributes.givenName}`,
      ),
    },
    mainEntityOfPage: "True",
  }}
/>
