---
import { marked } from 'marked';
import { Schema } from "astro-seo-schema";
import Markdown from "@astrojs/markdown-component";
import Chapterize from "@components/Chapterize.astro";
import PostDetailsLayout from "@layouts/PostDetailsLayout.astro";
import OptimizeContentImages from "@components/OptimizeContentImages.astro";

const { page, recurData } = Astro.props,
  headingName = recurData.text_chapter,
  { blogs } = page,
  { CF_IMAGE_DELIVERY_ENDPOINT: imgSrcPrefix } = import.meta.env;
---

<PostDetailsLayout {page} posts={blogs} {recurData} {headingName}>
  <div slot="post-details" class="prose content-text">
    <Chapterize>
      <Markdown>{page.Block_text}</Markdown>

      {
        /* (
          <OptimizeContentImages>
            <Markdown>{page.Block_text}</Markdown>
          </OptimizeContentImages>
        ) */
      }
    </Chapterize>
  </div>
</PostDetailsLayout>

<Schema
  item={{
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    headline: page.Title,
    alternativeHeadline: `The best things you need to know about ${page.Title}`,
    image: ( imgSrcPrefix +
            page.Intro_blob.data.attributes.provider_metadata.public_id +
            `/public` ),
    url: `${ Astro.site.origin}/${page.locale}/${page.Meta.URL_slug === "/" 
            ? "" 
            : page.Meta.URL_slug}/`,
    publisher: recurData.Company_name,
    dateCreated: page.createdAt,
    datePublished: page.publishedAt,
    dateModified: page.updatedAt,
    inLanguage: page.locale,
    copyrightYear: `${new Date().getFullYear()}`,
    copyrightHolder: "Dilmah",
    isFamilyFriendly: "True",
    description: `${(await Astro.__renderMarkdown(page.Intro_text)).replace(/(<([^>]+)>)/gi, "")}`,
    articleBody: `${(await Astro.__renderMarkdown(page.Block_text)).replace(/(<([^>]+)>)/gi, "")}`,
    author: {
      "@type": "Person",
      name: page.authors.data.map(({ attributes }) => (
              `${attributes.givenName}`
            )),
    },
    mainEntityOfPage: "True",
  }}
/>