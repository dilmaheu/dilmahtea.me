---
import CMS from "@store/CMS";
import RecurringImages from "@store/RecurringImages";
import localizeCMSImage from "@utils/localizeCMSImage";

import Banner from "@components/Banner.astro";
import Markdown from "@components/Markdown.astro";
import HeroContent from "@components/HeroContent.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";
import CrowdfundingProgress from "@components/CrowdfundingProgress.astro";

const { tick } = RecurringImages;

const { page, ariaLabelRecurData } = Astro.props,
  { locale } = page,
  crowdfundingPaymentLink = `/${locale}/${CMS.get("crowdfundingPayment", locale).Meta.URL_slug}/`;
---

<style lang="scss" define:vars={{ tick: `url("${tick.src}")` }}>
  @use "src/styles/poly-fluid" as *;

  .crowdfunding-plan-card {
    @apply flex flex-col bg-secondary-light
      w-full max-w-[400px] mx-auto sm:m-0 cursor-pointer
      sm:max-w-max sm:w-[calc(50%-clamp(15px,calc(4.375vw-13px),50px)/2)]
      lg:w-[calc(100%/3-clamp(15px,calc(4.375vw-13px),50px)/1.5)];

    padding: poly-fluid-clamp-primary(25px, 15px)
      poly-fluid-clamp-primary(20px, 35px) poly-fluid-clamp-primary(20px, 25px);
    clip-path: url(#blob-card-curve);
  }

  .prose-text-sm ul {
    @apply pl-0;

    li {
      @apply inline-block pl-0 items-center;

      &::before {
        background-image: var(--tick);

        @apply content-[""] inline-block align-baseline;

        width: poly-fluid-clamp-primary(14px, 16px);
        height: poly-fluid-clamp-primary(14px, 16px);
        margin-right: poly-fluid-clamp-primary(6px, 8px);
      }
    }
  }

  .crowdfunding-plan-title-icon {
    @apply inline-block align-baseline;

    width: poly-fluid-clamp-primary(20px, 30px);
    height: poly-fluid-clamp-primary(20px, 30px);
    margin-left: poly-fluid-clamp-primary(4px, 8px);
  }
</style>

<HeroContent page={page} blobContent={true}>
  <div class="flex items-center justify-center w-full" slot="blob-content">
    <CrowdfundingProgress
      goalText={page.text_heading_goal}
      supportersText={page.text_heading_supporters}
      {ariaLabelRecurData}
    />
  </div>

  <div
    class="wrapper flex items-center justify-center w-full"
    slot="blob-content-sm"
  >
    <CrowdfundingProgress
      goalText={page.Heading_goal}
      supportersText={page.Heading_supporters}
      {ariaLabelRecurData}
    />
  </div>
</HeroContent>

<div role="main" class="grid section-gap section-in-v-pad">
  {/* Plans Section */}
  <section>
    <ClipPathSVG
      id="blob-card-curve"
      path="M0.99,0.554 V0.735 c0,0.331,-0.079,0.243,-0.519,0.258 S0.004,1,0.004,0.718 c0,-0.037,0.004,-0.093,0.001,-0.164 C-0.005,0.353,-0.003,0.148,0.042,0.078 C0.102,-0.013,0.358,0.003,0.513,0.003 c0.216,0,0.41,-0.034,0.459,0.141 C1,0.309,0.995,0.441,0.99,0.554"
    />

    <div class="wrapper grid division-gap">
      <h2 id="plans" class="text-h2 text-primary">
        {page.Block_title}
      </h2>

      <div role="list" class="blob-cards-container">
        {
          page.allPlans.map(
            async ({
              Title,
              Price_EUR_excl_VAT,
              Title_icon,
              Intro_text,
              List,
            }) => (
              <div
                role="listitem"
                tabindex="0"
                class="crowdfunding-plan-card division-in-gap"
                data-plan={JSON.stringify({
                  perk: Title,
                  price: Price_EUR_excl_VAT,
                })}
              >
                <div class="division-in-element-gap flex flex-col text-center">
                  <div class="text-h5 text-primary">
                    {Title}

                    <img
                      class="crowdfunding-plan-title-icon"
                      src={await localizeCMSImage(
                        Title_icon?.data?.attributes?.formats?.thumbnail?.url ||
                          Title_icon?.data?.attributes?.url,
                      )}
                      alt=""
                    />
                  </div>

                  <div class="text-b2 font-bold text-black">
                    &#8364;{Price_EUR_excl_VAT}
                  </div>
                </div>

                <div class="prose-text-sm">
                  <p>{Intro_text}</p>
                  <Markdown>{List}</Markdown>
                </div>
              </div>
            ),
          )
        }
      </div>
    </div>
  </section>

  {/* Banner Section */}
  <Banner
    title={page.Block2_title}
    intro={page.Block2_text}
    blob={page.Block2_blob}
    blobCurveSecondary={true}
  />
</div>

<script
  define:vars={{
    crowdfundingPaymentLink,
  }}
>
  async function handleCrowdfundingPlanClick(plan) {
    localStorage.setItem("crowdfunding-info", JSON.stringify(plan));
    window.location.href = crowdfundingPaymentLink;
  }

  document.addEventListener("DOMContentLoaded", function (event) {
    const crowdfundingCards = document.querySelectorAll(
      ".crowdfunding-plan-card",
    );
    crowdfundingCards.forEach((card) => {
      card.addEventListener("click", function () {
        const planData = card.getAttribute("data-plan");
        const plan = planData ? JSON.parse(planData) : null;
        handleCrowdfundingPlanClick(plan);
      });
    });
  });
</script>
