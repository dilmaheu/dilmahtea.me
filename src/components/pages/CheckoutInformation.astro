---
import OrderSummary from "@components/OrderSummary.astro";

const { page } = Astro.props;
---

<style lang="scss">
  @use "src/styles/poly-fluid" as *;

  h2 {
    @apply font-bold text-primary leading-[110%];

    font-size: poly-fluid-clamp(
      (
        375px: 28px,
        1440px: 32px,
      )
    );
  }

  form {
    padding: poly-fluid-clamp(
      (
        375px: 25px 25px,
        1440px: 32px 56px,
      )
    );
  }

  .form-grid-container {
    @apply flex flex-col;

    gap: poly-fluid-clamp(
      (
        375px: 10px,
        1440px: 35px,
      )
    );

    .form-grid {
      @apply w-full grid gap-y-2.5;

      @media (min-width: 480px) {
        @apply grid-cols-2;

        gap: poly-fluid-clamp(
          (
            480px: 10px 40px,
            1440px: 25px 100px,
          )
        );
      }

      label {
        @apply flex flex-col gap-1.5;

        span {
          @apply font-bold text-black-light sm:text-[1.125rem];
        }

        input,
        select {
          @apply focus:ring focus:ring-emerald-800 focus:ring-opacity-20 focus:outline-none;
          @apply h-12 bg-secondary py-3 px-4 border border-primary rounded-full text-black sm:text-[1.125rem];
        }
      }
    }
  }
</style>

<section class="w-full lg:w-[66.67%]">
  <form
    role="main"
    aria-label={page.Aria_label_form_text}
    id="checkout-info-form"
    class="flex flex-col gap-12"
    action="/checkout/shipping"
  >
    <div
      role="form"
      aria-label={page.text_contact_info}
      class="form-grid-container"
    >
      <h2 class="recoleta">{page.text_contact_info}</h2>

      <div class="form-grid">
        <label>
          <span>{page.text_email_address}</span>

          <input
            type="email"
            name="email"
            placeholder={page.email_address_placeholder}
            required
          />
        </label>
      </div>
    </div>

    <div
      role="form"
      aria-label={page.text_shipping_address}
      class="form-grid-container"
    >
      <h2 class="recoleta">{page.text_shipping_address}</h2>

      <div class="form-grid">
        <label>
          <span>{page.text_first_name}</span>

          <input
            type="text"
            name="first_name"
            placeholder={page.first_name_placeholder}
            required
          />
        </label>

        <label>
          <span>{page.text_last_name}</span>

          <input
            type="text"
            name="last_name"
            placeholder={page.last_name_placeholder}
            required
          />
        </label>

        <label>
          <span>{page.text_country}</span>

          <select name="country" required>
            <option value="" selected disabled hidden>
              {page.country_placeholder}
            </option>

            {
              page.countries.data.map(
                ({ attributes: { name, localizations } }) => (
                  <option
                    value={localizations?.data[0]?.attributes?.name || name}
                  >
                    {name}
                  </option>
                )
              )
            }
          </select>
        </label>

        <label>
          <span>{page.text_city}</span>

          <input
            type="text"
            name="city"
            placeholder={page.city_placeholder}
            required
          />
        </label>

        <label>
          <span>{page.text_street}</span>

          <input
            type="text"
            name="street"
            placeholder={page.street_placeholder}
            required
          />
        </label>

        <label>
          <span>{page.text_postal_code}</span>

          <input
            type="text"
            name="postal_code"
            placeholder={page.postal_code_placeholder}
            required
          />
        </label>
      </div>
    </div>

    <div class="block lg:hidden -mb-6">
      <OrderSummary page={page} />
    </div>

    <div
      class="flex flex-col sm:flex-row items-center justify-center sm:justify-start gap-9 sm:gap-12"
    >
      <button
        class="w-full sm:w-auto py-4 px-8 sm:px-20 sm:px-24 bg-primary text-white font-bold rounded-full"
      >
        {page.text_continue_to_shipping}
      </button>

      <a href="/checkout/cart" class="text-primary font-bold">
        {page.text_return_to_cart}
      </a>
    </div>
  </form>
</section>

<section
  class="hidden lg:block lg:w-[36.67%] lg:border lg:border-l-primary-light"
>
  <OrderSummary page={page} />
</section>

<script>
  import fillUpForm from "@utils/client/fillUpForm";

  const inputToBeChanged = new URLSearchParams(location.search).get("change"),
    savedCheckoutInfo = localStorage.getItem("checkout-info"),
    returnToCartBtn = document.getElementById("return-to-cart-btn"),
    checkoutInfoForm = document.getElementById(
      "checkout-info-form"
    ) as HTMLFormElement;

  const parsedContactInfo = savedCheckoutInfo
    ? JSON.parse(savedCheckoutInfo)
    : null;

  if (parsedContactInfo) {
    fillUpForm(Object.entries(parsedContactInfo));
  }

  checkoutInfoForm?.addEventListener("submit", (event) => {
    event.preventDefault();

    const formData = Object.fromEntries(new FormData(checkoutInfoForm)),
      { street, city, country } = formData,
      contactInfo = {
        ...formData,
        delivery_address: [street, city, country].join(", "),
        kindness_cause: parsedContactInfo?.kindness_cause,
      };

    localStorage.setItem("checkout-info", JSON.stringify(contactInfo));

    location.href = checkoutInfoForm.action;
  });

  returnToCartBtn?.addEventListener("click", (event) => {
    event.preventDefault();

    window.openCart();
  });

  if (inputToBeChanged) {
    const inputElement = document.querySelector(
      `input[name=${inputToBeChanged}]`
    ) as HTMLInputElement;

    inputElement.scrollIntoView({ block: "center" });
    inputElement.focus();
  }
</script>
