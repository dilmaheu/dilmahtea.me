---
import CMS from "@store/CMS";
import getLocalizedLink from "@utils/getLocalizedLink";

import Markdown from "@components/Markdown.astro";
import OrderSummary from "@components/OrderSummary.astro";

const { page, recurData } = Astro.props,
  { locale } = page,
  checkoutCartLink = CMS.get("cart", locale).Meta.URL_slug,
  checkoutShippingLink = CMS.get("checkoutShipping", locale).Meta.URL_slug,
  userAccountRecurData = CMS.get("userAccountRecurringElement", locale);
---

<section class="w-full xl:w-2/3">
  <form
    role="main"
    aria-label={page.Aria_label_form_text}
    id="checkout-info-form"
    class="section-gap flex flex-col"
    action={getLocalizedLink(locale, checkoutShippingLink)}
  >
    <div
      role="form"
      aria-label={page.text_contact_info}
      class="division-gap grid"
    >
      <h2 class="recoleta text-h2 text-primary">{page.text_customer}</h2>

      <div
        id="guest-intro-text"
        class="prose-text prose max-w-none text-b5 text-black-light"
      >
        <Markdown>{page.Guest_intro_text}</Markdown>
      </div>

      <div class="form-grid">
        <label>
          <span>{recurData.text_email_address}</span>

          <input
            type="email"
            name="email"
            placeholder={recurData.email_address_placeholder}
            required
          />
        </label>
      </div>

      <div
        id="sign-in-text"
        class="prose-text prose max-w-none text-b5 text-black-light"
      >
        <Markdown>{page.Sign_in_text}</Markdown>
      </div>
    </div>

    <div class="w-full h-px bg-primary-lightest"></div>

    <div
      role="form"
      aria-label={page.text_shipping_address}
      class="division-gap grid"
    >
      <h2 class="recoleta text-h2 text-primary">
        {page.text_shipping_address}
      </h2>

      <div>
        <div class="division-in-gap grid">
          <div class="text-b5 font-bold text-black-light">Tag to recognize</div>

          <div class="flex flex-wrap gap-2.5 sm:gap-[15px]">
            <div>
              <input
                type="radio"
                name="shipping_address"
                id={`address1`}
                value={`value`}
                checked
                class="peer hidden"
              />

              <label
                for={`address1`}
                class:list={[
                  "radio-button-default text-primary",
                  "bg-secondary-light border-secondary-light font-medium",
                  "peer-checked:font-bold peer-checked:bg-primary peer-checked:text-secondary-light",
                ]}
                class="radio-button-default"
              >
                Home
              </label>
            </div>

            <div>
              <input
                type="radio"
                name="shipping_address"
                id={`address2`}
                value={`value`}
                class="peer hidden"
              />

              <label
                for={`address2`}
                class:list={[
                  "radio-button-default text-primary",
                  "bg-secondary-light border-secondary-light font-medium",
                  "peer-checked:font-bold peer-checked:bg-primary peer-checked:text-secondary-light",
                ]}
              >
                Parents
              </label>
            </div>

            <div>
              <input
                type="radio"
                name="shipping_address"
                id={`address3`}
                value={`value`}
                class="peer hidden"
              />

              <label
                for={`address3`}
                class:list={[
                  "radio-button-default text-primary",
                  "bg-secondary-light border-secondary-light font-medium",
                  "peer-checked:font-bold peer-checked:bg-primary peer-checked:text-secondary-light",
                ]}
              >
                Family
              </label>
            </div>

            <div class="more-address hidden">
              <input
                type="radio"
                name="shipping_address"
                id={`address4`}
                value={`value`}
                class="peer hidden"
              />

              <label
                for={`address4`}
                class:list={[
                  "radio-button-default text-primary",
                  "bg-secondary-light border-secondary-light font-medium",
                  "peer-checked:font-bold peer-checked:bg-primary peer-checked:text-secondary-light",
                ]}
              >
                Address Line 1
              </label>
            </div>

            <div class="more-address hidden">
              <input
                type="radio"
                name="shipping_address"
                id={`address5`}
                value={`value`}
                class="peer hidden"
              />

              <label
                for={`address5`}
                class:list={[
                  "radio-button-default text-primary",
                  "bg-secondary-light border-secondary-light font-medium",
                  "peer-checked:font-bold peer-checked:bg-primary peer-checked:text-secondary-light",
                ]}
              >
                Address Line 2
              </label>
            </div>

            <div class="more-address hidden">
              <input
                type="radio"
                name="shipping_address"
                id={`address6`}
                value={`value`}
                class="peer hidden"
              />

              <label
                for={`address6`}
                class:list={[
                  "radio-button-default text-primary",
                  "bg-secondary-light border-secondary-light font-medium",
                  "peer-checked:font-bold peer-checked:bg-primary peer-checked:text-secondary-light",
                ]}
              >
                Address Line 3
              </label>
            </div>

            <div>
              <input
                type="radio"
                name="shipping_address"
                id={`address-tag`}
                value={`value`}
                class="peer hidden"
              />

              <label
                for={`address-tag`}
                class:list={[
                  "radio-button-extended border-white",
                  "peer-checked:border-primary",
                ]}
              >
                Add +
              </label>
            </div>

            <div
              id="address-toggle-button"
              class="flex items-center gap-1 text-primary font-bold cursor-pointer"
            >
              <svg
                id="address-arrow-left"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 8 14"
                class="hidden w-3 h-3 fill-primary"
              >
                <path
                  d="M7.7,13.7a1.1,1.1,0,0,0,.3-.8,1.1,1.1,0,0,0-.3-.7L2.5,7,7.7,1.8A1.1,1.1,0,0,0,8,1,1.1,1.1,0,0,0,7.7.3,1.1,1.1,0,0,0,7,0a1.1,1.1,0,0,0-.8.3L.3,6.2A1.1,1.1,0,0,0,0,7a.9.9,0,0,0,.3.7l5.9,6A1.1,1.1,0,0,0,7,14a1.1,1.1,0,0,0,.7-.3Z"
                ></path>
              </svg>

              <div>
                <div id="hide-address-text" class="hidden">
                  {
                    userAccountRecurData.text_hide_more_address.replace(
                      "<number>",
                      "3",
                    )
                  }
                </div>
                <div id="show-address-text">
                  {
                    userAccountRecurData.text_more_address.replace(
                      "<number>",
                      "3",
                    )
                  }
                </div>
              </div>

              <svg
                id="address-arrow-right"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 8 14"
                class="w-3 h-3 fill-primary"
              >
                <path
                  d="M.3,13.7a1.1,1.1,0,0,1-.3-.8,1.1,1.1,0,0,1,.3-.7L5.5,7,.3,1.8A1.1,1.1,0,0,1,0,1,1.1,1.1,0,0,1,.3.3,1.1,1.1,0,0,1,1,0a1.1,1.1,0,0,1,.8.3L7.7,6.2A1.1,1.1,0,0,1,8,7a.9.9,0,0,1-.3.7l-5.9,6A1.1,1.1,0,0,1,1,14a1.1,1.1,0,0,1-.7-.3Z"
                ></path>
              </svg>
            </div>
          </div>

          <div id="tag-input" class="hidden">
            <div class="form-grid">
              <label class="relative">
                <input
                  type="text"
                  name="new_tag"
                  placeholder={`Enter your tag`}
                  class="pr-[40px]"
                />

                <span class="tag-input-close-button"> &#10005;</span>
              </label>
            </div>
          </div>
        </div>
      </div>

      <div class="form-grid">
        <label>
          <span>{recurData.text_first_name}</span>

          <input
            type="text"
            name="first_name"
            placeholder={recurData.first_name_placeholder}
            required
          />
        </label>

        <label>
          <span>{recurData.text_last_name}</span>

          <input
            type="text"
            name="last_name"
            placeholder={recurData.last_name_placeholder}
            required
          />
        </label>

        <label>
          <span>{recurData.text_street}</span>

          <input
            type="text"
            name="street"
            placeholder={recurData.street_placeholder}
            required
          />
        </label>

        <label>
          <span>{recurData.text_city}</span>

          <input
            type="text"
            name="city"
            placeholder={recurData.city_placeholder}
            required
          />
        </label>

        <label>
          <span>{recurData.text_postal_code}</span>

          <input
            type="text"
            name="postal_code"
            placeholder={recurData.postal_code_placeholder}
            required
          />
        </label>

        <label>
          <span>{recurData.text_country}</span>

          <select name="country" required>
            <option value="" selected disabled hidden>
              {recurData.country_placeholder}
            </option>

            {
              recurData.countries.data.map(
                ({ attributes: { name, localizations } }) => (
                  <option
                    value={localizations?.data[0]?.attributes?.name || name}
                  >
                    {name}
                  </option>
                ),
              )
            }
          </select>
        </label>
      </div>
    </div>

    <div class="block lg:hidden">
      <OrderSummary page={page} />
    </div>

    <div class="checkout-button-container">
      <a href={checkoutCartLink} class="button-link-primary-large">
        {page.text_return_to_cart}
      </a>

      <button class="w-full sm:w-1/3 button-primary-large">
        {page.text_continue_to_shipping}
      </button>
    </div>
  </form>
</section>

<section class="hidden xl:block xl:w-1/3">
  <OrderSummary page={page} />
</section>

<script is:inline>
  const id = document.getElementById.bind(document);

  const addressToggleBtn = id("address-toggle-button"),
    hideAddressTxt = id("hide-address-text"),
    showAddressTxt = id("show-address-text"),
    addressArrowLeft = id("address-arrow-left"),
    addressArrowRight = id("address-arrow-right"),
    selectorsMoreAddress = document.getElementsByClassName("more-address");

  function toggleAddress() {
    const moreAddressArray = Array.from(selectorsMoreAddress);

    moreAddressArray.forEach((item) => {
      item.classList.toggle("hidden");
    });
    hideAddressTxt.classList.toggle("hidden");
    showAddressTxt.classList.toggle("hidden");
    addressArrowLeft.classList.toggle("hidden");
    addressArrowRight.classList.toggle("hidden");
  }

  addressToggleBtn?.addEventListener("click", toggleAddress);
</script>

<script is:inline>
  const guestIntroText = document.getElementById("guest-intro-text"),
    signInText = document.getElementById("sign-in-text");

  if (window.cookies.isAuthenticated === "true") {
    guestIntroText.remove();
    signInText.remove();
  }
</script>

<script>
  const inputToBeChanged = new URLSearchParams(location.search).get("change"),
    returnToCartBtn = document.getElementById("return-to-cart-btn"),
    checkoutInfoForm = document.getElementById(
      "checkout-info-form",
    ) as HTMLFormElement;

  checkoutInfoForm?.addEventListener("submit", (event) => {
    event.preventDefault();

    const formData = Object.fromEntries(new FormData(checkoutInfoForm)),
      { street, city, country } = formData,
      contactInfo = {
        ...formData,
        delivery_address: [street, city, country].join(", "),
        kindness_cause: window.checkoutInfo.kindness_cause,
      };

    localStorage.setItem("checkout-info", JSON.stringify(contactInfo));

    location.href = checkoutInfoForm.action;
  });

  returnToCartBtn?.addEventListener("click", (event) => {
    event.preventDefault();

    window.openCart();
  });

  if (inputToBeChanged) {
    const inputElement = document.querySelector(
      `input[name=${inputToBeChanged}]`,
    ) as HTMLInputElement;

    inputElement.scrollIntoView({ block: "center" });
    inputElement.focus();
  }
</script>

