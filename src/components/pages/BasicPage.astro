---
import Markdown from "@astrojs/markdown-component";
import ClippedImg from "@components/ClippedImg.astro";
import BasicPageHero from "@components/BasicPageHero.astro";

const { page } = Astro.props;

const { Title: title } = page,
  { CloudImg_URL: url } = import.meta.env,
  introText = page.Intro_text.split("\n")[0],
  contentDescription = page.Intro_text.replace(introText, "");
---

<style lang="scss">
  .basicInfoSecTxt {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 5;
    -webkit-box-orient: vertical;
  }

  @media screen and (min-width: 640px) {
    .basicInfoSec {
      height: clamp(550px, 22vw + 420px, 820px);
    }
  }
</style>

<BasicPageHero {title} {introText} />

{
  contentDescription.length > 1 && (
    // Intro description
    <div class="block wrapper pt-[100px]">
      <div class="prose max-w-none basicInfoSecTxt">
        <Markdown>{contentDescription}</Markdown>
      </div>
    </div>
  )
}

{
  page.Block_blob.data === null && page.Block_text && (
    // Text content
    <div
      class="w-full h-full wrapper z-30 p-6 sm:px-0 sm:py-12"
      role="complementary"
    >
      <h2 class="heading-primary leading-[1.2] text-primary">
        {page.Heading_block}
      </h2>

      <div
        class="pt-0.5 mt-7 prose max-w-none basicInfoSecTxt"
        style="-webkit-line-clamp: unset;"
      >
        <Markdown>{page.Block_text}</Markdown>
      </div>
    </div>
  )
}

{
  page.Block_blob.data !== null && (
    <Fragment>
      {/* Information Section */}
      <div class="basicInfoSec h-full relative overflow-hidden">
        {/* Blob Image - Desktop view */}
        <div
          class={
            "hidden sm:block absolute left-0 z-20 w-full sm:w-1/2 h-full items-center absolute right-0 py-12 pr-6 lg:pr-24"
          }
        >
          <ClippedImg
            id="basicInfoSec_ImgFrame1"
            src={
              url +
              page.Block_blob.data.attributes.provider_metadata.public_id +
              `/cms`
            }
            className="relative"
            style="left: -20px; object-fit: cover;"
            path="M1 .494V.507A.019.028 0 0 0 1 .51v.016A.024.035 0 0 0 1 .53L.998.579C.991.693.986.856.835.945a.362.362 0 0 1-.222.05C.567.992.521.984.473.981L.438.98C.357.98.275 1 .204 1A.19.19 0 0 1 .079.961C-.011.886.018.658.018.485.018.396.005.337.001.277A.191.28 0 0 1 0 .244C0 .206.004.166.018.115.041.025.106.004.189.003c.071 0 .155.015.238.015L.45.017C.494.014.551.006.612.002.708-.004.816.001.893.063.976.13.997.311 1 .449v.025"
          />
        </div>

        {/* Text content */}
        <div class="h-full wrapper z-30 p-6 sm:px-0 sm:py-12">
          <div class="w-full h-full justify-end flex flex-wrap">
            <div
              class="w-full sm:w-1/2 h-full flex sm:items-center px-0 sm:pl-[10px] sm:pr-24"
              role="complementary"
            >
              <div class="relative">
                <h2 class="heading-primary leading-[1.2] text-primary">
                  {page.Heading_block}
                </h2>

                <div class="pt-0.5 mt-7 prose max-w-none basicInfoSecTxt">
                  <Markdown>{page.Block_text}</Markdown>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Blob Image - Mobile view */}
      <div class="block sm:hidden w-screen">
        <ClippedImg
          id="basicInfoSec_ImgFrame2"
          src={
            url +
            page.Block_blob.data.attributes.provider_metadata.public_id +
            `/small`
          }
          path="M.282 0C.147 0 .062.021 0 .064V.97c.045.046.195.006.324 0C.473.963.625 1 .774 1A.561.561 0 0 0 1 .954v-.89c-.059-.061-.237 0-.32 0S.417 0 .282 0"
        />
      </div>
    </Fragment>
  )
}

<div class="h-8 sm:h-16"></div>
