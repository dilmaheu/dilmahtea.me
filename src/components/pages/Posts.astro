---
import CupIcon from "@images/cup.svg";
import LeafImg from "@images/greenLeaf5.webp";
import LeafImgRight from "@images/greenLeaf.webp";
import CupGreenIcon from "@images/cupGreen.svg";

import Markdown from "@astrojs/markdown-component";

import ClippedImg from "@components/ClippedImg.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";
import HeroBackground from "@components/HeroBackground.astro";

import UpdateHeroTopMargin from "@scripts/UpdateHeroTopMargin.astro";

const { posts } = Astro.props.page,
  [firstPost] = posts,
  { CF_IMAGE_DELIVERY_ENDPOINT: imgSrcPrefix } = import.meta.env;
---

<style lang="scss">
  @use "src/styles/colors";

  .hero-post-author {
    font-size: clamp(1rem, 1.3vw + 0.1rem, 1.125rem);
  }

  .hero-title,
  .post-title {
    @apply leading-[1.2] underline decoration-[3px];
  }

  .hero-text {
    color: colors.$light-gray;
    font-size: clamp(0.875rem, 1.5vw + 0.1rem, 1.25rem);
  }

  .post-publish-date {
    font-size: clamp(0.625rem, 1.5vw + 0.01rem, 0.75rem);
  }

  .post-author {
    color: colors.$primary-color;
    font-size: clamp(1rem, 1.3vw + 0.1rem, 1.125rem);
  }

  .post-title {
    color: colors.$dark;
    font-size: clamp(1.75rem, 3.6vw + 0.01rem, 3.125rem);
  }

  .post-intro {
    color: colors.$post-intro;
    font-size: clamp(1rem, 1.5vw + 0.1rem, 1.5rem);
  }

  .post-leaf {
    height: clamp(55px, 8vw + 1px, 117px);
    filter: drop-shadow(0px 8px 9px rgba(0, 0, 0, 0.5));
  }

  .post-leaf-left {
    @apply -top-4 left-[7px];

    @media (min-width: 476px) {
      @apply left-[3%];
    }

    & {
      @apply sm:-top-[9%] sm:left-[3.5%] lg:-top-[11%] lg:left-0 xl:-top-[46px] xl:left-[26px];
    }
  }

  .post-leaf-right {
    @apply -left-5 bottom-[7%];

    @media (min-width: 476px) {
      @apply left-0 bottom-0;
    }

    & {
      @apply sm:left-[2%] md:left-[5%] lg:left-[68px] xl:left-[76px];
    }
  }
</style>

{/* Hero Section */}
<section class="hero overflow-hidden relative">
  <UpdateHeroTopMargin />

  <HeroBackground />

  {/* Text Content */}
  <div class="wrapper hero-text-container h-full relative z-30">
    <div
      role="banner"
      class="hero-text-content sm:w-8/12 md:w-7/12 pt-8 sm:pt-5 md:pt-0"
    >
      <div class="grid gap-y-1 sm:gap-y-0 xl:gap-y-1">
        <div class="hero-post-author flex flex-wrap font-bold leading-normal">
          {
            firstPost.authors.data.map(({ attributes }, i) => (
              <a href="#">{`${i > 0 ? ", " : " "}` + attributes.givenName}</a>
            ))
          }
        </div>

        <div class="post-publish-date leading-normal">
          {
            new Date(firstPost.createdAt).toLocaleString("en-US", {
              day: "numeric",
              month: "long",
            })
          }
        </div>
      </div>

      <h1 class="hero-title pt-[10px] md:pt-5">
        <a href={`/` + firstPost.Meta.URL_slug}>{firstPost.Title}</a>

        <span class="icon">
          <img src={CupIcon} alt="Tea Cup" class="heading-inline-icon" />
        </span>
      </h1>

      <a
        href={`/` + firstPost.Meta.URL_slug}
        class:list={[
          "hero-text block prose max-w-none",
          "pt-4 sm:pt-3 md:pt-4 leading-[1.4] sm:leading-[1.2] md:leading-normal",
        ]}
      >
        <Markdown>{firstPost.Intro_text}</Markdown>
      </a>
    </div>
  </div>

  {/* Blob Image - Desktop View */}
  <div class="h-full hidden sm:block absolute z-20 hero-img-curve-container">
    <ClippedImg
      id="hero-img-curve"
      src={imgSrcPrefix +
        firstPost.Intro_blob.data.attributes.provider_metadata.public_id +
        `/small`}
      className="relative object-cover"
      path="M1,0 S0.345,0.001,0.098,0.001 C-0.013,0.158,-0.007,0.342,0.009,0.606 C0.025,0.888,0.144,1,0.536,1 c0.3,0,0.379,-0.095,0.464,-0.147"
    />
  </div>
</section>

{/* Blob Image - Mobile View */}
<div class="block sm:hidden relative -mt-20 z-20 w-full">
  <ClippedImg
    id="hero-img-curve-sm"
    src={imgSrcPrefix +
      firstPost.Intro_blob.data.attributes.provider_metadata.public_id +
      `/small`}
    path="M1 .074v.904S.906 1 .774 1C.706 1 .637.996.569.993.487.989.405.984.324.986a4.576 4.576 0 0 0-.117.005C.115.996.032 1.001 0 .986V.074C.062.024.147 0 .282 0c.075 0 .165.023.244.043.062.016.118.03.154.03.026 0 .06-.007.097-.014C.861.044.959.025 1 .074"
  />
</div>

{/* All Posts Section */}
<section class="wrapper flex flex-wrap items-center gap-y-20 py-20">
  <ClipPathSVG
    id="post-img-curve"
    path="M.516.008C.359.008.1-.008.039.083S.002.495.017.736.182 1 .528 1C.813 1 .902.936.974.717 1 .624 1 .395.946.128.897-.045.735.008.516.008"
  />

  {
    posts.slice(1).map((post, index) => {
      const even = index % 2 === 0;

      return (
        <div class="flex flex-wrap items-center">
          <div
            class:list={[
              "relative w-full sm:w-1/2 order-1 mb-4 sm:mb-0",
              even
                ? "pr-0 sm:pr-5 md:pr-12 lg:pr-24"
                : "sm:order-2 pl-0 sm:pl-5 md:pl-12 lg:pl-24",
            ]}
          >
            <a href={`/` + post.Meta.URL_slug}>
              <img
                src={
                  imgSrcPrefix +
                  post.Intro_blob.data.attributes.provider_metadata.public_id +
                  `/small`
                }
                class="w-full h-full"
                style="clip-path: url(#post-img-curve);"
              />

              <img
                alt="Tea Leaf"
                class:list={[
                  "post-leaf absolute z-20",
                  even ? "post-leaf-left" : "post-leaf-right",
                ]}
                src={even ? LeafImg : LeafImgRight}
              />
            </a>
          </div>

          {/* Text content */}
          <div
            class:list={[
              "order-2 w-full sm:w-1/2 h-full flex flex-wrap",
              even ? "pr-0 sm:pr-5" : "sm:order-1 pl-0 sm:pl-5",
            ]}
          >
            <div>
              <div class="post-author leading-normal flex flex-wrap font-bold">
                {post.authors.data.map(({ attributes }, i) => (
                  <a href="#">
                    {`${i > 0 ? ", " : " "}` + attributes.givenName}
                  </a>
                ))}
              </div>

              <div class="post-publish-date text-black leading-normal">
                {new Date(post.createdAt).toLocaleString("en-US", {
                  day: "numeric",
                  month: "long",
                })}
              </div>

              <h1 class="post-title alice pt-[5px] md:pt-2 lg:pt-[11px]">
                <a href={`/` + post.Meta.URL_slug}>{post.Title}</a>

                <span class="icon">
                  <img
                    class="heading-inline-icon"
                    src={CupGreenIcon}
                    alt="cup-icon"
                  />
                </span>
              </h1>

              <a
                href={`/` + post.Meta.URL_slug}
                class="post-intro block pt-5 leading-normal prose max-w-none"
              >
                <Markdown>{post.Intro_text}</Markdown>
              </a>
            </div>
          </div>
        </div>
      );
    })
  }
</section>
