---
import Pagination from "@components/Pagination.astro";
import HeroContent from "@components/HeroContent.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";
import PostItem from "@components/PostItem.astro";

type Post = {
  Estate_name: string;
  authors: any;
  locale: string | undefined;
  updatedAt: string;
  createdAt: string;
  publishedAt: string;
  Intro_text: string;
  Intro_blob: any;
  Block_text: string;
  Category: any | undefined;
  Cooking_part: any;
  Cuisine: any;
  Nutrition_yield: any;
  Recipe_variations: any;
  Title: String;
  Time_preparation: any | undefined;
  Time_text: any | undefined;
  Time_cooking: any;
  Relevant_recipes: any;
  Meta: any;
  localizations: { data: { attributes: Post }[] };
} & Record<string, any>;

interface Props {
  page: {
    posts: Post[];
  } & Record<string, any>;
  ariaLabelRecurData: Record<string, any>;
}

const { page, ariaLabelRecurData } = Astro.props,
  { posts, pagination } = page,
  { STRAPI_URL } = import.meta.env;

posts.sort((a, b) => {
  return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();
});

const [firstPost] = posts;
---

<HeroContent
  page={{
    ...page,
    Title: firstPost.Title,
    Intro_text: firstPost.Intro_text,
    authors: firstPost.authors,
    Intro_blob: firstPost.Intro_blob,
    createdAt: firstPost.createdAt,
  }}
  link={firstPost.Meta.URL_slug}
  noAuthorImg={true}
/>

{/* All Posts Section */}
<section class="wrapper grid section-gap section-in-v-pad">
  <div>
    <ClipPathSVG
      id="post-img-curve"
      path="M.516.008C.359.008.1-.008.039.083S.002.495.017.736.182 1 .528 1C.813 1 .902.936.974.717 1 .624 1 .395.946.128.897-.045.735.008.516.008"
    />

    <div
      role="list"
      aria-label={ariaLabelRecurData.All_posts_text}
      class="grid section-gap"
    >
      {
        posts.slice(1).map((post, index) => {
          const isEven = index % 2 === 0,
            postImgURL = STRAPI_URL + post.Intro_blob.data.attributes.url,
            postLeafWidthMultiplier = isEven ? 0.24 : 0.18;

          return (
            <PostItem
              ariaLabel={`${ariaLabelRecurData.Post_text + (index + 2)} ${ariaLabelRecurData.Product_post_of_text} ${posts.length}`}
              postImgURL={postImgURL}
              altText={post.Intro_blob.data.attributes.alternativeText}
              locale={page.locale}
              authors={post.authors}
              createdAt={post.createdAt}
              postURL={`/` + post.Meta.URL_slug}
              postTitle={post.Title}
              introText={post.Intro_text}
              isEven={isEven}
              postLeafWidthMultiplier={postLeafWidthMultiplier}
              leafVisible={true}
              greenCupVisible={true}
              clipPathValue={"#post-img-curve"}
            />
          );
        })
      }
    </div>
  </div>

  {pagination && <Pagination pagination={pagination} />}
</section>
