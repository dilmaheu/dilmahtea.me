---
import Markdown from "@astrojs/markdown-component";
import { Picture } from "astro-imagetools/components";

import Hero from "@components/Hero.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";
import ClippedImg from "@components/ClippedImg.astro";
import ClippedPicture from "@components/ClippedPicture.astro";

import RecurringImages from "@store/RecurringImages";

const { white_cup, green_cup, left_post_leaf, green_leaf } = RecurringImages;

const { posts } = Astro.props.page,
  { CF_IMAGE_DELIVERY_ENDPOINT: imgSrcPrefix } = import.meta.env;

posts.sort((a, b) => {
  return new Date(b.createdAt) - new Date(a.createdAt); 
});

const [firstPost] = posts;
---

<style lang="scss">
  @use "src/styles/colors";

  .hero-title,
  .post-title {
    @apply decoration-[2.5px] underline-offset-[5px];

    a {
      text-decoration: underline;
    }
  }

  .post-title {
    font-size: clamp(1.75rem, 3.5vw + 0.01rem, 3rem);
    list-style: 130%;

    @media (max-width: 767.98px) {
      letter-spacing: -0.03em;
    }
  }

  .post-intro {
    @apply line-clamp-3 sm:line-clamp-4 md:line-clamp-5 lg:line-clamp-6;

    font-size: clamp(1rem, 1.5vw + 0.15rem, 1.5rem);
    line-height: 150%;
  }

  .post-img-curve-container {
    width: 100%;
    max-height: 530px;
    aspect-ratio: 3.26 / 2;

    @media (min-width: 640px) {
      aspect-ratio: 5.65 / 5;
    }
  }

  .post-leaf {
    filter: drop-shadow(0px 8px 9px rgba(0, 0, 0, 0.5));
  }

  .post-leaf-left {
    @apply -top-[6.5%] left-[3%] sm:-left-[1%] w-[24%] h-auto;
  }

  .post-leaf-right {
    @apply sm:right-0 bottom-[7%] w-[18%] h-auto;

    @media (max-width: 639.98px) {
      @apply -left-[5%] bottom-[6%];
    }
  }
</style>

{/* Hero Section */}
<Hero>
  {/* Text Content */}
  <div class="wrapper hero-text-container h-full relative z-30">
    <div role="banner" class="flex flex-wrap items-center sm:w-7/12 h-full">
      <div class="my-[30px]">
        {
          firstPost.authors && (
            <div class="grid gap-y-1 sm:gap-y-0 xl:gap-y-1">
              <div class="post-author flex flex-wrap font-bold text-lightgray">
                {firstPost.authors.data.map(({ attributes }, i) => (
                  <div>
                    {`${i > 0 ? ", " : " "}` + attributes.givenName}
                  </div>
                ))}
              </div>

              <div class="post-publish-date">
                {new Date(firstPost.createdAt).toLocaleString("en-US", {
                  day: "numeric",
                  month: "long",
                })}
              </div>
            </div>
          )
        }

        <h1 class="hero-title pt-2.5 md:pt-3 lg:pt-[15px]">
          <a href={`/` + firstPost.Meta.URL_slug}>{firstPost.Title}</a>

          <span class="icon heading-inline-icon">
            <img class="w-full h-full" {...white_cup} />
          </span>
        </h1>

        <a
          href={`/` + firstPost.Meta.URL_slug}
          class="hero-text pt-2.5 block prose text-lightgray max-w-none"
        >
          <Markdown>{firstPost.Intro_text}</Markdown>
        </a>
      </div>
    </div>
  </div>

  {/* Blob Image - Desktop View */}
  <div class="h-full hidden sm:block absolute z-20 hero-img-curve-container">
    <ClippedImg
      id="hero-img-curve"
      className="relative object-cover"
      src={imgSrcPrefix +
        firstPost.Intro_blob.data.attributes.provider_metadata.public_id +
        `/small`}
      alt={firstPost.Intro_blob.data.attributes.alternativeText}
      path="M1,0 S0.345,0.001,0.098,0.001 C-0.013,0.158,-0.007,0.342,0.009,0.606 C0.025,0.888,0.144,1,0.536,1 c0.3,0,0.379,-0.095,0.464,-0.147"
    />

    {
      /* (
        <ClippedPicture
          id="hero-img-curve"
          pictureStyle="position: relative;"
          src={
            imgSrcPrefix +
            firstPost.Intro_blob.data.attributes.provider_metadata.public_id +
            `/small`
          }
          path="M1,0 S0.345,0.001,0.098,0.001 C-0.013,0.158,-0.007,0.342,0.009,0.606 C0.025,0.888,0.144,1,0.536,1 c0.3,0,0.379,-0.095,0.464,-0.147"
        />
      ) */
    }
  </div>
</Hero>

{/* Blob Image - Mobile View */}
<div class="hero-img-sm-container block sm:hidden relative -mt-20 z-20 w-full">
  <ClippedImg
    id="hero-img-curve-sm"
    src={imgSrcPrefix +
      firstPost.Intro_blob.data.attributes.provider_metadata.public_id +
      `/small`}
    alt={firstPost.Intro_blob.data.attributes.alternativeText}
    path="M1 .074v.904S.906 1 .774 1C.706 1 .637.996.569.993.487.989.405.984.324.986a4.576 4.576 0 0 0-.117.005C.115.996.032 1.001 0 .986V.074C.062.024.147 0 .282 0c.075 0 .165.023.244.043.062.016.118.03.154.03.026 0 .06-.007.097-.014C.861.044.959.025 1 .074"
  />

  {
    /* (
      <ClippedPicture
        id="hero-img-curve-sm"
        src={
          imgSrcPrefix +
          firstPost.Intro_blob.data.attributes.provider_metadata.public_id +
          `/small`
        }
        path="M1 .074v.904S.906 1 .774 1C.706 1 .637.996.569.993.487.989.405.984.324.986a4.576 4.576 0 0 0-.117.005C.115.996.032 1.001 0 .986V.074C.062.024.147 0 .282 0c.075 0 .165.023.244.043.062.016.118.03.154.03.026 0 .06-.007.097-.014C.861.044.959.025 1 .074"
      />
    ) */
  }
</div>

{/* All Posts Section */}
<section class="wrapper">
  <ClipPathSVG
    id="post-img-curve"
    path="M.516.008C.359.008.1-.008.039.083S.002.495.017.736.182 1 .528 1C.813 1 .902.936.974.717 1 .624 1 .395.946.128.897-.045.735.008.516.008"
  />

  <div class="flex flex-wrap items-center gap-y-[50px] py-[50px]">
    {
      posts.slice(1).map((post, index) => {
        const isEven = index % 2 === 0;

        return (
          <div class="flex flex-wrap items-center">
            <div
              class:list={[
                "relative w-full sm:w-1/2 order-1 mb-[25px] sm:mb-0",
                isEven
                  ? "pr-0 sm:pr-5 md:pr-12 lg:pr-24"
                  : "sm:order-2 pl-0 sm:pl-5 md:pl-12 lg:pl-24",
              ]}
            >
              <a href={`/` + post.Meta.URL_slug}>
                <div class="post-img-curve-container">
                  <img
                    src={
                      imgSrcPrefix +
                      post.Intro_blob.data.attributes.provider_metadata
                        .public_id +
                      `/small`
                    }
                    alt={post.Intro_blob.data.attributes.alternativeText}
                    class="w-full h-full object-cover"
                    style="clip-path: url(#post-img-curve);"
                  />
                </div>

                <div
                  class:list={[
                    "post-leaf absolute z-20",
                    isEven ? "post-leaf-left" : "post-leaf-right",
                  ]}
                >
                  <img
                    class="w-full h-full"
                    {...(isEven ? left_post_leaf : green_leaf)}
                  />
                </div>

                {/* <>
                    <Picture
                      alt=""
                      layout="fill"
                      src={
                        imgSrcPrefix +
                        post.Intro_blob.data.attributes.provider_metadata
                          .public_id +
                        `/small`
                      }
                      attributes={{
                        picture: { style: "clip-path: url(#post-img-curve);" },
                      }}
                    />

                    <Picture
                      {...(isEven ? left_post_leaf : green_leaf)}
                      attributes={{
                        picture: {
                          class: `post-leaf ${
                            isEven ? "post-leaf-left" : "post-leaf-right"
                          }`,
                          style:
                            "position: absolute; z-index: 20; clip-path: url(#post-img-curve);",
                        },
                      }}
                    />
                  </> */}
              </a>
            </div>

            {/* Text content */}
            <div
              class:list={[
                "order-2 w-full sm:w-1/2 h-full flex flex-wrap",
                isEven ? "pr-0 sm:pr-5" : "sm:order-1 pl-0 sm:pl-5",
              ]}
            >
              <div>
                {post.authors && (
                  <div>
                    <div class="post-author flex flex-wrap font-bold text-primary">
                      {post.authors.data.map(({ attributes }, i) => (
                        <div>
                          {`${i > 0 ? ", " : " "}` + attributes.givenName}
                        </div>
                      ))}
                    </div>

                    <div class="post-publish-date text-dark">
                      {new Date(post.createdAt).toLocaleString("en-US", {
                        day: "numeric",
                        month: "long",
                      })}
                    </div>
                  </div>
                )}

                <h2 class="post-title alice text-primary pt-[15px]">
                  <a
                    href={`/` + post.Meta.URL_slug}
                    set:text={post.Title || post.Estate_name}
                  />

                  <span class="icon heading-inline-icon">
                    <img class="w-full h-full" {...green_cup} />
                  </span>
                </h2>

                <a
                  href={`/` + post.Meta.URL_slug}
                  class="post-intro texr-dark block pt-[15px] prose max-w-none"
                >
                  <Markdown>{post.Intro_text}</Markdown>
                </a>
              </div>
            </div>
          </div>
        );
      })
    }
  </div>
</section>
