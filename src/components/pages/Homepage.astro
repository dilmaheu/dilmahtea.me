---
import Products from "@store/Products";

import { Picture } from "astro-imagetools/components";

import Banner from "@components/Banner.astro";
import Markdown from "@components/Markdown.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";
import ProductCards from "@components/ProductCards.astro";
import KindnessImpact from "@components/KindnessImpact.astro";
import ProductCategories from "@components/ProductCategories.astro";
import AuthorSection from "@components/AuthorSection.astro";

import SecondaryPageLayout from "@layouts/SecondaryPageLayout.astro";

const { page, ariaLabelRecurData, noAuthorImg } = Astro.props,
  { locale, posts } = page,
  { STRAPI_URL } = import.meta.env;

posts.sort((a, b) => {
  return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();
});

const randPost = posts[(Math.random() * posts.length) | 0],
  estates = page.Estates.data.map(({ attributes }) => attributes);

const latestProducts = Products.get("all")
  .data.map(({ attributes }) =>
    [
      attributes,
      ...attributes.localizations.data.map(({ attributes }) => attributes),
    ].find((attributes) => locale === attributes.locale.substring(0, 2)),
  )
  .filter(Boolean)
  .sort((productA, productB) => {
    const dateComparison =
      new Date(productB.Active_from).getTime() -
      new Date(productA.Active_from).getTime();

    return dateComparison !== 0
      ? dateComparison
      : (productB.rank || 0) - (productA.rank || 0);
  });

const block6FilteredProducts = page.Block6_products.data.map(({ attributes }) =>
  latestProducts.find(({ SKU }) => attributes.SKU === SKU),
);
---

<style lang="scss">
  .estates-banner-bottom {
    clip-path: url(#estates-banner-curve-sm);

    @media (min-width: 768px) {
      clip-path: url(#estates-banner-curve);
    }
  }

  .linked-button {
    @apply text-[clamp(20px,1.5vw+8px,30px)] font-medium text-primary;
  }
</style>
<ClipPathSVG
  id="post-img-curve"
  path="M.516.008C.359.008.1-.008.039.083S.002.495.017.736.182 1 .528 1C.813 1 .902.936.974.717 1 .624 1 .395.946.128.897-.045.735.008.516.008"
/>

<SecondaryPageLayout {page} plainTitle={true} headerBackground={true}>
  <div role="main" class="grid section-gap section-in-v-pad">
    {/* latest Products Section */}
    {
      page.Block_visibility && (
        <section class="wrapper ">
          <div class="grid division-gap">
            {page.Block_visibility && (
              <h2
                id={page?.Block_title.toLowerCase().replaceAll(" ", "-")}
                class="heading-secondary text-primary"
              >
                {page.Block_title}
              </h2>
            )}

            <ProductCards {locale} products={latestProducts} />

            {page.Block_button_text && (
              <div class="button-link-primary-lightest text-center">
                <a href={page?.Block_button_link || "#"}>
                  {page.Block_button_text}
                </a>
              </div>
            )}
          </div>
        </section>
      )
    }

    {/* Product Category Section */}
    {
      page.Block2_visibility && (
        <ProductCategories {locale} title={page.Block2_title} />
      )
    }

    {/* Random Post Section */}
    {
      page.Block3_visibility && (
        <section class="wrapper">
          <div class="grid division-gap">
            {page.Block3_title && (
              <h2
                id={page.Block3_title.toLowerCase().replaceAll(" ", "-")}
                class="heading-secondary text-center text-primary"
              >
                {page.Block3_title}
              </h2>
            )}

            <div
              aria-label={ariaLabelRecurData.Highlighted_post_text}
              class="link-section grid sm:grid-cols-2 items-center division-gap"
            >
              <div class="post-img-curve-container">
                <Picture
                  layout="fill"
                  src={STRAPI_URL + randPost.Intro_blob?.data?.attributes.url}
                  alt={randPost.Intro_blob?.data?.attributes.alternativeText}
                  sizes={[
                    "(min-width: 768px) min(600px, calc(50vw - min(100px, 5vw) - 48px))",
                    "(min-width: 640px) min(600px, calc(45vw - 20px))",
                    "90vw",
                  ].join(", ")}
                  attributes={{
                    picture: { style: "clip-path: url(#post-img-curve);" },
                  }}
                />
              </div>

              {/* Text content */}
              <div class="grid division-in-gap">
                {randPost.authors && (
                  <AuthorSection page={page} authors={randPost.authors} createdAt={randPost.createdAt} noAuthorImg={!noAuthorImg} isTextBlackLight={true} />
                  // <div class="quick-info-black-light">
                  //   <div
                  //     role="presentation"
                  //     aria-label={randPost.authors.data.map(
                  //       ({ attributes }, i) =>
                  //         ariaLabelRecurData.Wrote_by_text +
                  //         (i > 0 ? ", " : " ") +
                  //         attributes.givenName,
                  //     )}
                  //     class="author-name"
                  //   >
                  //     {randPost.authors.data.map(({ attributes }, index) => (
                  //       <span>
                  //         {`${index > 0 ? ", " : " "}` + attributes.givenName}
                  //       </span>
                  //     ))}
                  //   </div>

                  //   <div class="quick-info-item">
                  //     {new Date(randPost.createdAt).toLocaleString("en-US", {
                  //       day: "numeric",
                  //       month: "long",
                  //     })}
                  //   </div>
                  // </div>
                )}

                <h2 class="heading-secondary text-primary">
                  <a
                    class="main-link"
                    href={`/` + randPost.Meta.URL_slug}
                    set:text={randPost.Title}
                  />
                </h2>
                <div class="post-intro intro-text">
                  <Markdown>{randPost.Intro_text}</Markdown>
                </div>
              </div>
            </div>
          </div>
        </section>
      )
    }

    <div class="grid section-gap">
      {/* Banner Section */}
      {
        page.Block4_visibility && (
          <div class="z-30">
            <Banner
              title={page.Block4_title}
              intro={page.Block4_text}
              button_text={page.Block4_button_text}
              button_link={page.Block4_button_link}
              background_img={page.Block4_blob}
            />
          </div>
        )
      }

      {/* Estates Section */}
      {
        page.Block5_visibility && estates.length > 0 && (
          <section class="-mt-[110px]">
            <ClipPathSVG
              id="estates-banner-curve"
              path="M1,0 c-0.005,0.158,-0.026,0.437,-0.104,0.633 c-0.115,0.288,-0.242,-0.102,-0.316,-0.102 c-0.07,0,-0.171,0.017,-0.231,0.185 c-0.057,0.16,-0.132,0.283,-0.193,0.283 C0.032,1,0,0.633,0,0.633 V0"
            />

            <ClipPathSVG
              id="estates-banner-curve-sm"
              path="M1,0 V0.722 c-0.095,0.278,-0.193,0,-0.324,0 C0.504,0.722,0.369,1,0.22,1 C0.088,1,0,0.382,0,0.382 V0"
            />

            <div class="bg-primary pt-[60px] relative z-10">
              <div class="wrapper grid division-gap section-in-v-pad-sm !pb-0 text-white">
                <div class="grid division-in-gap">
                  <div class="heading-secondary text-center">
                    <h2>{page.Block5_title}</h2>
                  </div>

                  {page.Block5_text && (
                    <div class="prose-text-dark-link text-center">
                      <Markdown>{page.Block5_text}</Markdown>
                    </div>
                  )}
                </div>

                <div
                  role="list"
                  aria-label={ariaLabelRecurData.Kindness_Items_text}
                  class:list={[
                    "grid justify-center card-gap",
                    "grid-cols-[repeat(auto-fit,minmax(0,400px))]",
                    "2xl:grid-cols-[repeat(auto-fit,minmax(0,480px))]",
                  ]}
                >
                  {estates.map((post) => (
                    <div
                      role="listitem"
                      aria-label={ariaLabelRecurData.Kindness_Items_text}
                      class:list={[
                        "link-section relative overflow-hidden",
                        "aspect-[6/5] rounded-[10px] bg-secondary",
                      ]}
                    >
                      <Picture
                        layout="fill"
                        alt={post.Intro_blob.data.attributes.alternativeText}
                        src={STRAPI_URL + post.Intro_blob.data.attributes.url}
                        attributes={{ img: { style: "aspect-ratio: 6 / 5;" } }}
                        sizes="(min-width: 768px) min(580px, calc(40vw - 25px)), min(80vw, 420px)"
                        attributes={{
                          picture: {
                            style: "position: absolute;",
                          },
                        }}
                      />

                      <div
                        class:list={[
                          "relative z-50 flex items-end h-full aspect-[6/5]",
                          "bg-gradient-to-t from-black/70 p-[25px] sm:p-5",
                        ]}
                      >
                        <div class="text-h4">
                          <a
                            class="main-link"
                            set:text={post.Estate_name}
                            href={`/` + post.Meta.URL_slug}
                          />
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
            <div class="estates-banner-bottom section-in-v-pad-sm !pb-1 -mt-1 bg-primary z-10" />
          </section>
        )
      }
    </div>

    {
      page.Block6_visibility && block6FilteredProducts.length > 0 && (
        <section class="wrapper">
          <div class="grid division-gap">
            {page.Block6_visibility && (
              <h2
                id={page?.Block6_title.toLowerCase().replaceAll(" ", "-")}
                class="heading-secondary text-primary"
              >
                {page.Block6_title}
              </h2>
            )}

            <ProductCards {locale} products={block6FilteredProducts} />

            {page.Block6_button_text && (
              <div class="button-link-primary-lightest text-center">
                <a href={page?.Block6_button_link || "#"}>
                  {page.Block6_button_text}
                </a>
              </div>
            )}
          </div>
        </section>
      )
    }

    {/* Banner Section */}
    {
      page.Block7_visibility && (
        <Banner
          title={page.Block7_title}
          intro={page.Block7_text}
          button_text={page.Block7_button_text}
          button_link={page.Block7_button_link}
          blob={page.Block7_blob}
        />
      )
    }

    {/* Kindness Impact Section */}
    {
      page.Block8_visibility && (
        <KindnessImpact
          {locale}
          heading={page.Block8_title}
          impacts={page.Impacts}
        />
      )
    }
  </div>
</SecondaryPageLayout>

<script>
  const productCardBtns =
    document.querySelectorAll<HTMLButtonElement>(".product-card-btn");

  productCardBtns.forEach((button) => {
    button.addEventListener("click", () => {
      const { sku } = button.dataset;

      window.addProductToCart(sku);
    });
  });
</script>
