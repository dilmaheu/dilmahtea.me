---
import Markdown from "@astrojs/markdown-component";
import PostDetailsLayout from "@layouts/PostDetailsLayout.astro";

const { page, recurData } = Astro.props,
  { howTos } = page,
  headingType = recurData.text_practices,
  { CF_IMAGE_DELIVERY_ENDPOINT: imgSrcPrefix } = import.meta.env;

// html source to chapterize based on
const practicesHeadingsHTML = page.Method.map(
  (method) => `<h2>${method.Method_title}</h2>`
).join("\n");
---

<style lang="scss">
  @use "src/styles/colors";
  @use "src/styles/typography";

  .how_headerSteps {
    @apply py-7 px-5 rounded-[10px];

    background: colors.$howto-white;
  }

  .how_headerStepsHeading {
    color: colors.$primary-color;
    font-family: typography.$alice;

    @apply text-[2rem] leading-[1.175];
  }

  .howTo_headerStepItem {
    background: colors.$primary-color;

    @apply py-[clamp(9px,1.5vw,18px)] px-[clamp(20px,3.125vw,38px)];
    @apply text-white text-[1.125rem] leading-[1.325] max-w-[240px] min-h-[80px] rounded-[58px];
  }

  .HowToMethodHead {
    color: colors.$howto-white;
    font-family: typography.$alice;
    background-color: colors.$primary-color;

    @apply font-normal text-[2.25rem] leading-[1.3] rounded-[10px];
    @apply py-[clamp(8px,1.25vw,10px)] px-[clamp(15px,2.5vw,32px)];
  }

  .howToStepContainer {
    background-color: colors.$howto-white;

    @apply my-[30px] rounded-[10px] px-9 py-[clamp(15px,2.875vw,36px)];
  }

  .howToStepTitle {
    color: colors.$primary-color;

    @apply font-medium text-[1.75rem] leading-tight tracking-tight;
  }

  .howToStepTxt {
    color: colors.$dark;

    @apply my-5 font-normal text-[1.25rem] leading-[1.75];
  }
</style>

<PostDetailsLayout {page} posts={howTos} {recurData} {headingType}>
  <Fragment slot="chapters-source-html" set:html={practicesHeadingsHTML} />

  <Fragment slot="how-to-steps">
    {/* How to Section */}
    <div class="wrapper flex relative z-20 -top-10 lg:-top-16 xl:-top-24">
      <div class="how_headerSteps">
        <h2 class="how_headerStepsHeading text-center sm:text-left">
          {page.Method.length}
          {recurData.text_practices_to_follow}
        </h2>

        <div class="mt-5">
          <div
            class="flex flex-wrap justify-center sm:justify-start gap-x-5 gap-y-2.5"
          >
            {
              page.Method.map((method) => (
                <a href={`#` + method.Method_title.replaceAll(" ", "-")}>
                  <div class="flex items-center cursor-pointer howTo_headerStepItem">
                    {method.Method_title}
                  </div>
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </Fragment>

  <Fragment slot="post-details">
    {
      page.Method.map((method) => (
        <div class="chapter">
          <h2
            class="HowToMethodHead"
            id={method.Method_title.replaceAll(" ", "-")}
          >
            {method.Method_title}
          </h2>

          {method.Steps.map((step, idx) => (
            <div class="howToStepContainer">
              <h3 class="howToStepTitle">{idx + 1 + ". " + step.Step_title}</h3>

              <div class="howToStepTxt">
                <Markdown>{step.Step_text}</Markdown>
              </div>

              {step.Step_blob.data !== null && (
                <div class="mt-5">
                  <img
                    src={
                      imgSrcPrefix +
                      step.Step_blob.data.attributes.provider_metadata
                        .public_id +
                      `/small`
                    }
                  />
                </div>
              )}
            </div>
          ))}
        </div>
      ))
    }
  </Fragment>
</PostDetailsLayout>
