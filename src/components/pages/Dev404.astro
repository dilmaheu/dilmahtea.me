---
import NotFound from "./NotFound.astro";
import Layout from "../../layouts/Layout.astro";
import NotFoundPagesQuery from "../../queries/NotFoundPagesQuery";
import DefaultRouteRedirect from "../scripts/DefaultRouteRedirect.astro";

// fetching the error page
const _404PagesData = await fetch(`${import.meta.env.DB_URL}`, {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    Authorization: `Bearer ${import.meta.env.ACCESS_TOKEN}`,
  },
  body: JSON.stringify({
    query: NotFoundPagesQuery,
  }),
}).then((response) => response.json());

// saving it's page attributes like meta and other components
const requestPath = Astro.url.pathname;

let page = _404PagesData.data.basicPages.data[0].attributes,
  recurData = _404PagesData.data.recurringElement.data.attributes;

const availableLocales = page.localizations.data.map(({ attributes }) =>
  attributes.locale.substring(0, 2)
);

let [, locale] = requestPath.match(/^\/([a-z]{2})\//) ?? [];

const pathHasValidLocaleCode = locale && availableLocales.includes(locale);

if (pathHasValidLocaleCode && locale !== "en") {
  page = page.localizations.data.find(
    ({ attributes }) => attributes.locale.substring(0, 2) === locale
  ).attributes;

  recurData = {
    // include OpenGraph_default data to non-english recurring elements
    OpenGraph_default: recurData.OpenGraph_default,
    // localize recurring elements
    ...recurData.localizations.data.find(
      ({ attributes }) => attributes.locale.substring(0, 2) === locale
    ).attributes,
  };
}
---

{!pathHasValidLocaleCode ? (
  <DefaultRouteRedirect />
) : (
  <Layout
    locale={locale}
    availableLocales={availableLocales}
    meta={page.Meta}
    recurData={recurData}
    metaImage={
      page.Block_blob != null && page.Block_blob.data != null
        ? page.Block_blob.data.attributes.provider_metadata.public_id
        : recurData.OpenGraph_default.data.attributes.provider_metadata
            .public_id
    }
  >
    <NotFound page={page} />
  </Layout>
)}
