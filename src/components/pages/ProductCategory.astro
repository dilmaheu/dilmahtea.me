---
import { Icon } from "astro-icon/components";

import FilteredProducts from "@solid/FilteredProducts.astro";
import ProductFiltersForm from "@solid/ProductFiltersForm.astro";

import Markdown from "@components/Markdown.astro";
import Chapterize from "@components/Chapterize.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";
import OptimizeContentImages from "@components/OptimizeContentImages.astro";

import PostDetailsLayout from "@layouts/PostDetailsLayout.astro";

import CMS from "@store/CMS";
import RecurringImages from "@store/RecurringImages";

const { white_love } = RecurringImages;

const { page, recurData, ariaLabelRecurData } = Astro.props,
  headingName = recurData.text_content,
  { locale } = page;

const productSizes = CMS.get("productSizes"),
  productVariants = CMS.get("productVariants");

const subCategories = page.Sub_categories.data.filter(
  ({ attributes: { products } }) => products.data.length > 0,
);

page.Heading_button_link = "#content";
---

<PostDetailsLayout
  {page}
  {recurData}
  {ariaLabelRecurData}
  {headingName}
  type="complementary"
  headerBackgroundSm={true}
>
  <div slot="tea-variants-header">
    <ProductFiltersForm
      {locale}
      {productSizes}
      {productVariants}
      {recurData}
      type="header"
    />
  </div>

  <div slot="product-page-sections">
    <ClipPathSVG
      id="product-card-curve"
      path="M0.99,0.554 V0.735 c0,0.331,-0.079,0.243,-0.519,0.258 S0.004,1,0.004,0.718 c0,-0.037,0.004,-0.093,0.001,-0.164 C-0.005,0.353,-0.003,0.148,0.042,0.078 C0.102,-0.013,0.358,0.003,0.513,0.003 c0.216,0,0.41,-0.034,0.459,0.141 C1,0.309,0.995,0.441,0.99,0.554"
    />

    {/* Products Section */}
    <div role="main" class="grid section-gap">
      <FilteredProducts {page} {recurData} {white_love} category={page.Title}>
        <Icon
          slot="alertCircleIcon"
          name="mdi:alert-circle"
          class="inline-flex p-0.5 w-[26px] text-white bg-warning rounded-full select-none"
        />
      </FilteredProducts>

      {
        subCategories.map(({ attributes: { Title, Intro_text } }) => (
          <div class="hidden [&:has(.product-card)]:block">
            <div class="grid division-gap">
              <div class="wrapper grid division-in-gap">
                <h2
                  id={encodeURIComponent(
                    Title?.toLowerCase()?.replaceAll(" ", "-"),
                  )}
                  class="text-h2 text-primary"
                >
                  {Title}
                </h2>

                <div class="intro-text">
                  <Markdown>{Intro_text}</Markdown>
                </div>
              </div>

              <FilteredProducts
                {page}
                {recurData}
                {white_love}
                subCategory={Title}
              >
                <Icon
                  slot="alertCircleIcon"
                  name="mdi:alert-circle"
                  class="inline-flex w-[26px] p-0.5 bg-warning text-white rounded-full select-none"
                />
              </FilteredProducts>
            </div>
          </div>
        ))
      }
    </div>
  </div>

  {
    page.Block_text && (
      <div slot="post-details" id="content" class="prose-text">
        <Chapterize>
          <OptimizeContentImages>
            <Markdown>{page.Block_text}</Markdown>
          </OptimizeContentImages>
        </Chapterize>
      </div>
    )
  }
</PostDetailsLayout>
