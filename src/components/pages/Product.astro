---
import { Icon } from "astro-icon/components";

import FilteredProducts from "@solid/FilteredProducts.astro";
import ProductFiltersForm from "@solid/ProductFiltersForm.astro";

import Banner from "@components/Banner.astro";
import Markdown from "@components/Markdown.astro";
import Chapterize from "@components/Chapterize.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";
import ProductCategories from "@components/ProductCategories.astro";
import OptimizeContentImages from "@components/OptimizeContentImages.astro";

import PostDetailsLayout from "@layouts/PostDetailsLayout.astro";

import CMS from "@store/CMS";
import RecurringImages from "@store/RecurringImages";

const { white_love } = RecurringImages;

const { page, recurData, ariaLabelRecurData } = Astro.props,
  headingName = recurData.text_chapter,
  { locale } = page;

const productSizes = CMS.get("productSizes"),
  productVariants = CMS.get("productVariants");
---

<PostDetailsLayout
  {page}
  {recurData}
  {ariaLabelRecurData}
  {headingName}
  type="section"
  headerBackgroundSm={true}
>
  <div slot="product-page-sections">
    <ClipPathSVG
      id="product-card-curve"
      path="M0.99,0.554 V0.735 c0,0.331,-0.079,0.243,-0.519,0.258 S0.004,1,0.004,0.718 c0,-0.037,0.004,-0.093,0.001,-0.164 C-0.005,0.353,-0.003,0.148,0.042,0.078 C0.102,-0.013,0.358,0.003,0.513,0.003 c0.216,0,0.41,-0.034,0.459,0.141 C1,0.309,0.995,0.441,0.99,0.554"
    />

    <div class="grid section-gap">
      {/* Categories Section */}
      <ProductCategories {locale} title={page.Category_title} />

      <section role="main" class="grid division-gap">
        <div class="wrapper grid division-in-gap">
          <div class="division-in-gap flex flex-wrap items-center">
            <h2
              id={encodeURIComponent(
                page.Block_title?.toLowerCase()?.replaceAll(" ", "-"),
              )}
              class="text-h2 text-primary"
            >
              {page.Block_title}
            </h2>

            <ProductFiltersForm
              {locale}
              {productSizes}
              {productVariants}
              {recurData}
            />
          </div>

          <div class="text-black-light prose-text">
            <Markdown>{page.Block_text}</Markdown>
          </div>
        </div>

        <FilteredProducts {page} {recurData} {white_love}>
          <Icon
            slot="alertCircleIcon"
            name="mdi:alert-circle"
            class="inline-flex p-0.5 w-[26px] text-white bg-warning rounded-full select-none"
          />
        </FilteredProducts>
      </section>

      {/* Banner Section */}
      <Banner
        title={page.Block2_title}
        buttonText={page.Block2_button_text}
        buttonLink={page.Block2_button_link}
        backgroundImg={page.Block2_blob}
      />
    </div>
  </div>

  {
    page.Block3_text && (
      <div slot="post-details" class="prose-text">
        <Chapterize>
          <OptimizeContentImages>
            <Markdown>{page.Block3_text}</Markdown>
          </OptimizeContentImages>
        </Chapterize>
      </div>
    )
  }
</PostDetailsLayout>
