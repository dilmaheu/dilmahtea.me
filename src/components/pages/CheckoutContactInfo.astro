---
import CMS from "@store/CMS";

const { page, recurData } = Astro.props;

const { locale } = page,
  { data: checkoutShippingData } = CMS.get("checkoutShipping"),
  { URL_slug: shippingPageSlug } = checkoutShippingData.attributes.Meta,
  shippingPageLink = "/" + locale + "/" + shippingPageSlug;

const checkoutInformation = CMS.get("checkoutInformation", locale),
  countries = checkoutInformation.countries.split("\n");
---

<style lang="scss">
  @use "src/styles/poly-fluid" as *;

  form {
    padding: poly-fluid-clamp(
      (
        375px: 25px 25px,
        1440px: 32px 56px,
      )
    );
  }

  .form-grid-container {
    @apply flex flex-col;

    gap: poly-fluid-clamp(
      (
        375px: 10px,
        1440px: 35px,
      )
    );

    .form-grid {
      @apply w-full grid gap-y-2.5;

      @media (min-width: 480px) {
        @apply grid-cols-2;

        gap: poly-fluid-clamp(
          (
            480px: 10px 40px,
            1440px: 25px 100px,
          )
        );
      }

      label {
        @apply flex flex-col gap-1.5;

        span {
          @apply font-medium text-dark sm:text-[1.125rem];
        }

        input,
        select {
          @apply focus:ring focus:ring-emerald-800 focus:ring-opacity-20 focus:outline-none;
          @apply h-12 bg-lightgray py-3 px-4 border border-primary rounded-full text-dark sm:text-[1.125rem];
        }
      }
    }
  }
</style>

<form
  id="checkout-contact-info-form"
  class="flex flex-col gap-12"
  action={shippingPageLink}
>
  <div class="form-grid-container">
    <h4 class="alice">{checkoutInformation.text_contact_info}</h4>

    <div class="form-grid">
      <label>
        <span>{checkoutInformation.text_email_address}</span>

        <input
          type="email"
          id="email"
          name="email"
          placeholder={checkoutInformation.email_address_placeholder}
          required
        />
      </label>
    </div>
  </div>

  <div class="form-grid-container">
    <h4 class="alice">{checkoutInformation.text_shipping_address}</h4>

    <div class="form-grid">
      <label>
        <span>{checkoutInformation.text_first_name}</span>

        <input
          type="text"
          id="first_name"
          name="first_name"
          placeholder={checkoutInformation.first_name_placeholder}
          required
        />
      </label>

      <label>
        <span>{checkoutInformation.text_last_name}</span>

        <input
          type="text"
          id="last_name"
          name="last_name"
          placeholder={checkoutInformation.last_name_placeholder}
          required
        />
      </label>

      <label>
        <span>{checkoutInformation.text_country}</span>

        <select id="country" name="country" required>
          <option value="" selected disabled hidden>
            {checkoutInformation.country_placeholder}
          </option>

          {
            countries.map((country) => (
              <option value={country}>{country}</option>
            ))
          }
        </select>
      </label>

      <label>
        <span>{checkoutInformation.text_city}</span>

        <input
          type="text"
          id="city"
          name="city"
          placeholder={checkoutInformation.city_placeholder}
          required
        />
      </label>

      <label>
        <span>{checkoutInformation.text_street}</span>

        <input
          type="text"
          id="address"
          name="street"
          placeholder={checkoutInformation.street_placeholder}
          required
        />
      </label>

      <label>
        <span>{checkoutInformation.text_postal_code}</span>

        <input
          type="text"
          id="postal_code"
          name="postal_code"
          placeholder={checkoutInformation.postal_code_placeholder}
          required
        />
      </label>
    </div>
  </div>

  <div
    class="flex flex-col sm:flex-row items-center justify-center sm:justify-start gap-9 sm:gap-12"
  >
    <button
      class="w-full sm:w-auto py-4 px-20 sm:px-24 bg-primary text-lightgray font-bold rounded-full"
    >
      {checkoutInformation.text_continue_to_shipping}
    </button>

    <button id="return-to-cart-btn" class="text-primary font-bold">
      Return To Cart
    </button>
  </div>
</form>

<script>
  import fillUpForm from "@utils/fillUpForm";

  declare global {
    interface Window {
      openCart: () => void;
    }
  }

  const savedCheckoutContactInfo = localStorage.getItem(
    "checkout-contact-info"
  );

  if (savedCheckoutContactInfo) {
    const parsedContactInfo = JSON.parse(savedCheckoutContactInfo);

    fillUpForm(Object.entries(parsedContactInfo));
  }

  const returnToCartBtn = document.getElementById("return-to-cart-btn"),
    checkoutContactInfoForm = document.querySelector(
      "#checkout-contact-info-form"
    ) as HTMLFormElement;

  checkoutContactInfoForm?.addEventListener("submit", (event) => {
    event.preventDefault();

    const formData = Object.fromEntries(new FormData(checkoutContactInfoForm)),
      { street, city, country } = formData,
      contactInfo = {
        ...formData,
        delivery_address: [street, city, country].join(", "),
      };

    localStorage.setItem("checkout-contact-info", JSON.stringify(contactInfo));

    location.href = checkoutContactInfoForm.action;
  });

  returnToCartBtn?.addEventListener("click", (event) => {
    event.preventDefault();

    window.openCart();
  });
</script>
