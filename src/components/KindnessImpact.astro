---
import CMS from "@store/CMS";

import Markdown from "@components/Markdown.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";

import localizeCMSImage from "@utils/localizeCMSImage";

const { locale, heading, impacts } = Astro.props;

const ariaLabelRecurData = CMS.get("ariaLabelRecurringElement", locale);
---

<style lang="scss">
  @use "src/styles/poly-fluid" as *;

  .kindness-impact-container {
    clip-path: url(#kindness-impact-bg-curve-sm);

    @media (min-width: 640px) {
      clip-path: url(#kindness-impact-bg-curve);
    }
  }

  .kindness-impacts-icon {
    height: poly-fluid-clamp-primary(35px, 45px);
  }

  .kindness-impacts-text {
    p {
      margin: 0;
    }
  }
</style>

<section class="wrapper">
  <ClipPathSVG
    id="kindness-impact-bg-curve"
    path="M0.04,0.087 C0.086,-0.001,0.164,0.007,0.262,0.002 C0.427,-0.005,0.522,0.007,0.687,0.002 c0.115,-0.003,0.179,0,0.242,0.029 c0.048,0.022,0.075,0.301,0.071,0.479 c-0.003,0.162,0.008,0.386,-0.054,0.413 c-0.058,0.025,-0.193,0.034,-0.252,0.049 c-0.111,0.03,-0.23,-0.006,-0.332,0 c-0.092,0.006,-0.206,0.08,-0.309,-0.049 C0,0.856,-0.001,0.685,0,0.511 C0.002,0.345,-0.007,0.177,0.04,0.087"
  />

  <ClipPathSVG
    id="kindness-impact-bg-curve-sm"
    path="M0.913,0.04 c0.088,0.046,0.08,0.124,0.084,0.222 c0.007,0.165,-0.005,0.26,0,0.425 c0.003,0.116,0,0.179,-0.029,0.242 c-0.022,0.048,-0.301,0.075,-0.479,0.071 c-0.162,-0.003,-0.386,0.008,-0.413,-0.054 C0.05,0.888,0.042,0.753,0.026,0.694 C-0.003,0.583,0.033,0.464,0.026,0.363 C0.021,0.271,-0.054,0.156,0.076,0.054 C0.144,0,0.315,-0.001,0.489,0 C0.655,0.002,0.823,-0.007,0.913,0.04"
  />

  <div class="kindness-impact-container blob-div-in-pad bg-secondary-light">
    <div class="flex flex-wrap items-center relative z-20 division-gap">
      <h3 class="text-b1 w-full font-bold text-black text-center">
        {heading}
      </h3>

      <div
        role="list"
        aria-label={ariaLabelRecurData.Kindness_impact_items}
        class="w-full flex flex-wrap justify-around mx-auto division-gap"
      >
        {
          impacts.map(
            ({ Value, Value_unit, Description, Icon: { data: icon } }) => (
              <div
                role="listitem"
                aria-label={Value + Description}
                class="grid justify-items-center division-in-element-gap"
              >
                <div class="kindness-impacts-icon">
                  {async () => (
                    <img
                      class="w-full h-full"
                      alt=""
                      src={await localizeCMSImage(icon.attributes.url)}
                    />
                  )}
                </div>
                <div class="grid justify-items-center text-center">
                  <div class="flex items-center">
                    <span class="text-heading-big text-primary whitespace-nowrap">
                      {Value}
                    </span>
                    <span class="kindness-impacts-text text-b1 text-black-light">
                      {Value_unit}
                    </span>
                  </div>

                  <div class="kindness-impacts-text text-b5 text-black-light">
                    <Markdown>{Description}</Markdown>
                  </div>
                </div>
              </div>
            ),
          )
        }
      </div>
    </div>
  </div>
</section>
