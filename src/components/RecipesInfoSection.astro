---
import he from "he";
import { parseHTML } from "linkedom";
import renderMarkdown from "@utils/renderMarkdown";
import OptimizeContentImages from "@components/OptimizeContentImages.astro";

const { page } = Astro.props;

let contentBlocksHTML = he.decode(renderMarkdown(page.Block_text));

let { document: contentBlocksDocument } = parseHTML(contentBlocksHTML),
  titles = Array.from(contentBlocksDocument.querySelectorAll("h2"));
---

{
  titles.map((title) => {
    const { textContent: titleText } = title,
      { innerHTML } = title.nextElementSibling;

    return (
      <>
        <h2
          id={encodeURIComponent(titleText.toLowerCase().replaceAll(" ", "-"))}
          class="tiled-title"
        >
          {titleText}
        </h2>

        <div class="tiled-div">
          <OptimizeContentImages>
            <Fragment set:html={innerHTML} />
          </OptimizeContentImages>
        </div>
      </>
    );
  })
}
