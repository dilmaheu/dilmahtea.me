<script is:inline>
  {
    window.replacePlaceholders = (content, data) => {
      const placeholderRegex =
        /<placeholder\s+name=(?:"|&#34;)(\w+)(?:"|&#34;)[^>]*><\/placeholder>/g;

      return content.replace(
        placeholderRegex,
        (match, placeholderName) => data[placeholderName]
      );
    };

    const storedCart = JSON.parse(localStorage.getItem("cart") || "{}");

    let subTotal, tax, shippingCharge, total;

    const updateAmounts = (cart) => {
      subTotal = Object.values(cart).reduce(
        (sum, { price }) => sum + Number(price),
        0
      );

      (tax = subTotal / 20),
        (shippingCharge = subTotal / 10),
        (total = subTotal + shippingCharge + tax);
    };

    updateAmounts(storedCart);

    const id = document.getElementById.bind(document);

    let cartSize,
      orderTax,
      orderTotal,
      cartSubTotal,
      orderSubTotal,
      orderShippingCharge;

    const updateUI = (cart) => {
      cartSize ??= id("cart-size");
      orderTax ??= id("order-tax");
      orderTotal ??= id("order-total");
      cartSubTotal ??= id("cart-subtotal");
      orderSubTotal ??= id("order-subtotal");
      orderShippingCharge ??= id("order-shipping-charge");

      cartSize.textContent = Object.values(cart).length;

      updateAmounts(cart);

      cartSubTotal.textContent = "€" + subTotal;

      orderTax && (orderTax.textContent = "€" + tax);
      orderTotal && (orderTotal.textContent = "€" + total);
      orderSubTotal && (orderSubTotal.textContent = "€" + subTotal);
      orderShippingCharge &&
        (orderShippingCharge.textContent = "€" + shippingCharge);
    };

    window.cart = new Proxy(storedCart, {
      get(cart, property) {
        switch (property) {
          case "subTotal":
            return subTotal;

          case "tax":
            return tax;

          case "shippingCharge":
            return shippingCharge;

          case "total":
            return total;

          default:
            return cart[property];
        }
      },

      set(cart, id, productData) {
        const existingProduct = cart[id];

        if (existingProduct) {
          const productPrice = productData.price / productData.quantity;

          productData.quantity =
            existingProduct.quantity + productData.quantity;
          productData.price = productData.quantity * productPrice;

          const productElement = document.getElementById(id),
            productPriceElement = productElement.querySelector(
              ".cart-product-price"
            ),
            productQuantityElement = productElement.querySelector(
              ".cart-product-quantity"
            );

          productQuantityElement.value = productData.quantity;
          productPriceElement.textContent = productData.price;
        }

        cart[id] = productData;

        localStorage.setItem("cart", JSON.stringify(cart));

        existingProduct ?? window.addProductToCart(id);

        updateUI(cart);

        return true;
      },

      deleteProperty(cart, property) {
        delete cart[property];

        localStorage.setItem("cart", JSON.stringify(cart));

        updateUI(cart);

        return true;
      },
    });
  }
</script>
