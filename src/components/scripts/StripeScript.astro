---
const stripeScriptUrl = "https://js.stripe.com/v3/";
const response = await fetch(stripeScriptUrl);

const createScript = response.ok
  ? `<script>${await response.text()}</script>`
  : '<script src="https://js.stripe.com/v3/" module preload></script>';
---

<Fragment set:html={createScript} />

<script>
  // Check if the element with ID "payment-info-form" exists before executing the scripts
  if (document.getElementById("payment-info-form")) {
    const id = document.getElementById.bind(document),
      form = id("payment-info-form"),
      card = id("card"),
      ideal = id("ideal"),
      cardError = id("card-error"),
      stripePublishableKey = id("stripe-publishable-key");

    const STRIPE_PUBLISHABLE_KEY =
      stripePublishableKey?.getAttribute("data-key");

    const stripe = Stripe(STRIPE_PUBLISHABLE_KEY),
      elements = stripe.elements({ locale: window.preferredLocale });

    const elementStyles = {
      style: {
        base: {
          fontSize: `${Math.min(Math.max(16, 0.25 * window.innerWidth + 14.4), 18)}px`, //text-b5
        },
      },
      classes: {
        base: "input-field-api",
        focus: "input-field-api-focus",
      },
    };

    // Variables for Stripe Elements
    let cardNumberElement = null;
    let cardExpiryElement = null;
    let cardCvcElement = null;
    let idealBankElement = null;

    document.addEventListener("change", () => {
      const isCard = card.checked,
        isIdeal = ideal.checked;

      // Clear existing Stripe Elements
      clearStripeElements();

      if (isCard) {
        // Create Stripe Elements for card number, expiry, and CVC if they don't exist
        if (!cardNumberElement) {
          cardNumberElement = elements.create("cardNumber", elementStyles);
          cardNumberElement.mount("#card-number");
        }
        if (!cardExpiryElement) {
          cardExpiryElement = elements.create("cardExpiry", elementStyles);
          cardExpiryElement.mount("#card-expiry");
        }
        if (!cardCvcElement) {
          cardCvcElement = elements.create("cardCvc", elementStyles);
          cardCvcElement.mount("#card-cvc");
        }
      } else if (isIdeal) {
        // Create idealBank Element if it doesn't exist
        if (!idealBankElement) {
          idealBankElement = elements.create("idealBank", elementStyles);
          idealBankElement.mount("#ideal-bank");
        }
      }

      if (isCard) {
        // Attach form submission event listener for card payments
        form.addEventListener("submit", onSubmitCard);
      } else {
        form.removeEventListener("submit", onSubmitCard);
      }
    });

    function onSubmitCard(event) {
      event.preventDefault();
      createToken(cardNumberElement);
    }

    async function createToken(element) {
      try {
        const { token, error } = await stripe.createToken(element);
        if (error) {
          cardError.classList.remove("hidden");
        } else {
          id("stripeToken").value = token.id;
          form.submit();
        }
      } catch (err) {
        cardError.classList.remove("hidden");
      }
    }

    function clearStripeElements() {
      if (cardNumberElement) {
        cardNumberElement.destroy();
        cardNumberElement = null;
      }
      if (cardExpiryElement) {
        cardExpiryElement.destroy();
        cardExpiryElement = null;
      }
      if (cardCvcElement) {
        cardCvcElement.destroy();
        cardCvcElement = null;
      }
      if (idealBankElement) {
        idealBankElement.destroy();
        idealBankElement = null;
      }
    }
  }
</script>
