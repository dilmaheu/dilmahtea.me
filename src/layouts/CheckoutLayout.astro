---
import { Picture } from "astro-imagetools/components";

import Footer from "@components/Footer.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import ClipPathSVG from "@components/ClipPathSVG.astro";
import OrderSummary from "@components/OrderSummary.astro";
import Navbar from "@components/Navbar.astro";

import CMS from "@store/CMS";
import RecurringImages from "@store/RecurringImages";
import getAvailableLocales from "@utils/getAvailableLocales";

const { logo, nav_background, nav_background_sm } = RecurringImages;

interface Props {
  page: Record<string, any>;
  meta: Record<string, any>;
  locale: string;
  recurData: Record<string, any>;
  metaImageSrc: string;
  alternateURLs: { [locale: string]: string };
  isCheckoutKindness: boolean;
}

const {
  page,
  meta,
  locale,
  recurData,
  alternateURLs,
  metaImageSrc,
  isCheckoutKindness,
} = Astro.props as Props;

const checkoutStepOrder = page.checkout_step_order,
  checkoutFlowData = CMS.get("checkoutFlow").data.attributes,
  steps = checkoutFlowData.steps.split("\n"),
  shortenedSteps = checkoutFlowData.shortened_steps.split("\n");

const footerText = recurData.Footer_text.replaceAll(
  "<current_year>",
  `${new Date().getFullYear()}`,
);
---

<style lang="scss">
  @use "src/styles/poly-fluid" as *;

  .checkout-flow-container {
    padding: poly-fluid-clamp(
      (
        640px: 25px 0px,
        1440px: 36px 0px,
      )
    );
  }

  .flow {
    > div {
      @apply h-full text-center flex flex-col justify-between items-center;

      span,
      h1 {
        @apply text-b6-xs;
      }

      div {
        @apply w-full rounded-full;

        height: poly-fluid-clamp-primary(5px, 8px);
      }
    }
  }

  .main-container {
    margin-top: poly-fluid-clamp-primary(85px, 92px);

    @apply md:mt-0;
  }
</style>

<BaseLayout
  page={page}
  meta={meta}
  locale={locale}
  alternateURLs={alternateURLs}
  metaImageSrc={metaImageSrc}
>
  <script define:vars={{ isCheckoutKindness }}>
    if (!isCheckoutKindness && Object.keys(window.cart).length === 0) {
      history.back();
    }
  </script>

  <div class="flex flex-wrap w-full h-full">
    <div id="checkout" class="block w-full bg-secondary">
      {
        page.type === "plan" ? (
          <Navbar page={page} docLocale={locale} />
        ) : (
          <header
            class="checkout-flow-container z-[99] fixed md:relative w-full bg-primary"
            style="clip-path: url(#checkout-header-curve);"
          >
            <ClipPathSVG
              id="checkout-header-curve"
              path="M0,0 L0,0.936 C0,0.936,0.009,1,0.107,1 C0.152,1,0.198,0.992,0.247,0.983 C0.305,0.973,0.368,0.961,0.441,0.961 C0.511,0.961,0.573,0.971,0.634,0.981 C0.692,0.991,0.749,1,0.81,1 C0.934,1,1,0.878,1,0.878 V0 H0"
            />

            {nav_background && (
              <Picture
                alt=""
                layout="fill"
                preload="avif"
                src={nav_background_sm?.src || nav_background.src}
                artDirectives={[
                  {
                    media: "(min-width: 640px)",
                    breakpoints: { minWidth: 640 },
                    src: nav_background.src,
                  },
                ]}
                attributes={{
                  picture: {
                    style: "position: absolute; top: 0; left: 0;",
                  },
                }}
              />
            )}

            <div class="wrapper relative flex gap-[clamp(15px,calc(2.5vw-1px),35px)]">
              <a href="/" class="h-[clamp(35px,calc(1.40vw+29.72px),50px)]">
                <img {...logo} class="h-full" />
              </a>

              <div
                class="flow flex-grow grid gap-[clamp(5px,calc(2.5vw-11px),25px)] text-white"
                style={`grid-template-columns: ${Array.from({
                  length: steps.length,
                })
                  .map(() => "1fr")
                  .join(" ")}`}
              >
                {steps.map((step, i) => {
                  const shortenedStep = shortenedSteps[i],
                    StepTitleTag = i + 1 === checkoutStepOrder ? "h1" : "span";

                  return (
                    <div>
                      <StepTitleTag
                        class:list={[
                          shortenedStep !== step && "hidden sm:inline",
                          i + 1 === checkoutStepOrder
                            ? "font-bold"
                            : "font-normal",
                        ]}
                      >
                        {step}
                      </StepTitleTag>

                      {shortenedStep !== step && (
                        <StepTitleTag
                          class:list={[
                            "inline sm:hidden",
                            i + 1 === checkoutStepOrder && "font-bold",
                          ]}
                        >
                          {shortenedStep}
                        </StepTitleTag>
                      )}

                      {i + 1 === checkoutStepOrder ? (
                        <div class="grid grid-cols-2 bg-white/30">
                          <div class="bg-white" />
                        </div>
                      ) : i + 1 > checkoutStepOrder ? (
                        <div class="bg-white/30" />
                      ) : (
                        <div class="bg-white" />
                      )}
                    </div>
                  );
                })}
              </div>
            </div>
          </header>
        )
      }

      {
        page.type === "checkoutKindness" ? (
          <ClipPathSVG
            id="blob-card-curve"
            path="M0.99,0.554 V0.735 c0,0.331,-0.079,0.243,-0.519,0.258 S0.004,1,0.004,0.718 c0,-0.037,0.004,-0.093,0.001,-0.164 C-0.005,0.353,-0.003,0.148,0.042,0.078 C0.102,-0.013,0.358,0.003,0.513,0.003 c0.216,0,0.41,-0.034,0.459,0.141 C1,0.309,0.995,0.441,0.99,0.554"
          />
        ) : (
          <ClipPathSVG
            id="product-image-curve"
            path="M0.516,0.008 C0.36,0.008,0.1,-0.008,0.04,0.082 C-0.021,0.172,0.002,0.495,0.017,0.736 C0.032,0.978,0.182,1,0.528,1 C0.813,1,0.902,0.936,0.974,0.717 C1,0.624,1,0.395,0.946,0.128 C0.897,-0.045,0.735,0.008,0.516,0.008"
          />
        )
      }

      <main
        id="checkout-main"
        class:list={[
          "wrapper section-in-v-pad",
          page.type !== "plan" ? "main-container" : "",

          page.type !== "checkoutKindness" &&
            "section-gap flex flex-col lg:flex-row",
        ]}
      >
        <section
          class:list={[
            "w-full",
            page.type === "checkoutKindness"
              ? "grid section-gap"
              : "lg:w-3/5 2xl:w-2/3",
          ]}
        >
          <slot />
        </section>

        <section class="w-full lg:w-2/5 2xl:w-1/3">
          {
            page?.type !== "checkoutKindness" && (
              <OrderSummary page={page} recurData={recurData} />
            )
          }
        </section>
      </main>
    </div>

    <Footer footerText={footerText} recurData={recurData} type={page?.type} />
  </div>
</BaseLayout>
