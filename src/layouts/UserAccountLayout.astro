---
import Navbar from "@components/Navbar.astro";
import Footer from "@components/Footer.astro";
import CartOverlay from "@components/CartOverlay.astro";

import BaseLayout from "@layouts/BaseLayout.astro";

interface Props {
  page: Record<string, any>;
  meta: Record<string, any>;
  locale: string;
  recurData: Record<string, any>;
  metaImageSrc: string;
  alternateURLs: { [locale: string]: string };
  availableLocales: string[];
}

const {
  page,
  meta,
  locale,
  recurData,
  alternateURLs,
  availableLocales,
  metaImageSrc,
} = Astro.props as Props;

const footerText = recurData.Footer_text.replaceAll(
  "<current_year>",
  `${new Date().getFullYear()}`,
);
---

<style lang="scss" is:global>
  @use "src/styles/poly-fluid" as *;

  .dashboard-sec-title {
    @apply bg-primary leading-[110%] text-secondary-light rounded-[10px];

    font-size: clamp(2rem, 3vw + 0.55rem, 2.625rem);
    padding: 10px clamp(15px, 2.08vw + 0.01rem, 30px);

    @media (max-width: 767.98px) {
      padding: 15px;
    }
  }

  .dashboard-sec {
    @apply bg-secondary-light rounded-[10px] mt-[25px] text-black;

    padding: clamp(15px, 2.08vw + 0.01rem, 25px)
      clamp(15px, 2.2vw + 0.1rem, 35px);

    @media (max-width: 767.98px) {
      padding: 15px;
    }

    .information-label {
      @apply text-sm md:text-base font-medium leading-[150%] text-black-light;
    }

    .information-text {
      @apply w-full pl-1.5 leading-[150%] text-black opacity-100 sm:font-medium bg-secondary-light outline-none;

      &:not(:disabled) {
        @apply mb-[-2px] border-b-2 border-primary-light;
      }

      &.errored {
        @apply border-error;
      }

      font-size: clamp(1.125rem, 1.5vw + 0.3rem, 1.5rem);
    }

    .information-btn {
      @apply leading-[150%] font-semibold text-primary;

      font-size: clamp(1rem, 1.4vw + 0.3rem, 1.375rem);
    }

    h2 {
      @apply text-[clamp(1.25rem,1.5vw+0.15rem,1.5rem)] font-bold text-primary;
    }

    .order-item {
      @apply grid gap-[25px] sm:gap-[30px];

      &:not(:last-child) {
        @apply border-b border-primary-light;
      }

      .order-img {
        width: poly-fluid-clamp(
          (
            640px: 50px,
            1440px: 65px,
          )
        );
      }

      .order-item-label {
        @apply flex items-center gap-2 text-lg font-bold leading-[150%] text-black;
      }

      .order-item-date {
        @apply text-sm sm:text-base text-black-light;
      }

      .order-item-title {
        @apply font-bold text-[clamp(1.25rem,1.5vw+0.15rem,1.5rem)];
      }

      .order-item-info {
        @apply flex flex-wrap gap-1 sm:gap-2 text-sm sm:text-base text-black-light;
      }

      .order-item-quantity {
        @apply text-sm sm:text-base font-semibold text-black-light;
      }

      .order-item-cart-btn {
        @apply flex gap-1 sm:gap-2 w-fit py-[5px] sm:py-2.5 px-3 sm:px-5
          text-sm sm:text-base font-semibold sm:font-bold text-white bg-primary rounded-full;

        &:disabled,
        &[disabled] {
          @apply bg-black/60 text-secondary-light cursor-not-allowed;
        }
      }

      .show-more-toggle-btn {
        @apply flex gap-1 sm:gap-2 items-center font-bold text-primary cursor-pointer;
      }
    }
  }

  .month-container {
    @apply grid grid-cols-[repeat(auto-fit,minmax(90px,1fr))] gap-[15px] items-center w-full;

    .month {
      @apply flex;

      input[type="checkbox"] {
        @apply w-full hidden;

        &:checked + label {
          @apply text-white font-bold bg-primary;
        }
      }

      label {
        @apply grow w-full px-5 py-2.5 font-medium text-primary text-center select-none cursor-pointer rounded-full;
      }
    }

    .active {
      @apply font-bold text-white bg-primary;
    }
  }
</style>

<BaseLayout
  page={page}
  meta={meta}
  locale={locale}
  alternateURLs={alternateURLs}
  metaImageSrc={metaImageSrc}
>
  <div class="flex flex-wrap w-full h-full">
    <div class="block w-full bg-secondary">
      <Navbar
        page={page}
        docLocale={locale}
        footerText={footerText}
        isUserAccountNavbar={true}
        availableLocales={availableLocales}
      />

      <div class="relative">
        <div class="hero-sub-menu-shadow nav-bg hidden"></div>
      </div>

      <main>
        <div class="wrapper">
          {
            page.Breadcrumb && (
              <div
                role="banner"
                class="flex flex-wrap gap-2 recoleta text-2xl leading-[110%] text-primary mt-[25px]"
              >
                {page.Breadcrumb?.Steps.map((step, index) => (
                  <div class="flex items-center gap-2">
                    {index > 0 && (
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="8"
                        height="17"
                        viewBox="0 0 8 16.7"
                      >
                        <path
                          d="M.3,16.3a1.4,1.4,0,0,1,0-1.7L5.4,8.3.3,2.1A1.1,1.1,0,0,1,0,1.3,1.7,1.7,0,0,1,.3.3,1.1,1.1,0,0,1,1.1,0a.9.9,0,0,1,.7.3L7.7,7.5a1.1,1.1,0,0,1,.3.8,1.7,1.7,0,0,1-.3,1l-5.9,7a.7.7,0,0,1-.7.4A.9.9,0,0,1,.3,16.3Z"
                          style="fill:#2b4b50"
                        />
                      </svg>
                    )}
                    <a href={step.Link}>{step.Name}</a>
                  </div>
                ))}
              </div>
            )
          }
        </div>

        <slot />
      </main>
    </div>

    <Footer footerText={footerText} recurData={recurData} />
  </div>

  <CartOverlay page={page} />
</BaseLayout>
