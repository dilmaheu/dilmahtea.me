---
import "@styles/styles.scss";

import { parseHTML } from "linkedom";

import MainHead from "@components/MainHead.astro";
import LocalizeLinks from "@components/LocalizeLinks.astro";
import TopNotifications from "@components/TopNotifications.astro";

import Cookies from "@scripts/Cookies.astro";
import CartStore from "@scripts/CartStore.astro";
import SetUserRegion from "@scripts/SetUserRegion.astro";
import SetPreferredLocale from "@scripts/SetPreferredLocale.astro";
import SetGlobalVariables from "@scripts/SetGlobalVariables.astro";
import NotificationAnimations from "@scripts/NotificationAnimations.astro";

import CSPRecord from "@store/CSPRecord";
import shouldDisplayExperimentals from "@utils/shouldDisplayExperimentals";

interface Props {
  page: Record<string, any>;
  meta: Record<string, any>;
  locale: string;
  metaImageSrc: string;
  alternateURLs: { [locale: string]: string };
}

const { page, meta, locale, alternateURLs, metaImageSrc } =
  Astro.props as Props;

const documentBodyHTML = await Astro.slots.render("default"),
  { document: documentBody } = parseHTML(documentBodyHTML),
  relPreloadLinks = documentBody.querySelectorAll("link[rel='preload']");

const relPreloadLinksHTML = [...relPreloadLinks]
  .map((link) => {
    link.remove();

    return link.outerHTML;
  })
  .join("\n");

// document is rewritten in LocalizeLinks.astro
---

<html lang={locale}>
  <head>
    <MainHead
      page={page}
      meta={meta}
      locale={locale}
      metaImageSrc={metaImageSrc}
      alternateURLs={alternateURLs}
      relPreloadLinksHTML={relPreloadLinksHTML}
    />

    {
      import.meta.env.DEV && (
        /* content-security-policy header for the development server */ <meta
          http-equiv="Content-Security-Policy"
          content={Object.entries(CSPRecord({ dev: true }))
            .map(([policy, sources]) => `${policy} ${sources.join(" ")}`)
            .join("; ")}
        />
      )
    }

    <Cookies />

    <SetUserRegion />

    <SetPreferredLocale />

    <SetGlobalVariables {alternateURLs} {shouldDisplayExperimentals} />

    <CartStore />

    <NotificationAnimations />
  </head>

  <TopNotifications locale={locale} />

  <LocalizeLinks locale={locale} documentBody={documentBody} />
</html>
