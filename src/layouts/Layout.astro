---
// Style Imports
import "../styles/global.css";
import "../styles/styles.css";
// Component Imports
import MainHead from "../components/MainHead.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import Redirect from "../components/Redirect.astro";
import Alert from "../components/Alert.astro";

/**
 * This file is used as a re-usable component that is the layout
 * It features the head, navbar and footer
 */

interface Props {
  locale: string;
  meta: any;
  recurData: any;
  metaImage: string;
  availableLocales: string[];
}

const { meta, locale, recurData, availableLocales, metaImage } =
  Astro.props as Props;
let { noindex, nofollow } = meta;
const title = meta.HTML_Title;
const description = meta.Meta_description;
const image = metaImage;
const canonicalURL = meta.Canonical_link;
const slugURL = meta.URL_slug;

let noIndex = "";
if (noindex === true) {
  noIndex = "noindex";
}
let noFollow = "";
if (nofollow === true) {
  noFollow = "nofollow";
}

const footerText = recurData.Footer_text.replaceAll(
  "<current_year>",
  `<noscript>${new Date().getFullYear()}</noscript><script>document.write(new Date().getFullYear().toString())</script>`
);
---

<html lang={locale}>
  <head>
    <Redirect />

    <MainHead
      {title}
      {description}
      {noIndex}
      {noFollow}
      {image}
      {locale}
      {canonicalURL}
      {slugURL}
      {availableLocales}
    />
  </head>

  <body>
    <div>
      <Navbar
        locale={locale}
        availableLocales={availableLocales}
        footerText={footerText}
      />

      <main>
        <slot />
      </main>

      <Footer footerText={footerText} />
    </div>

    <div class="translation-not-found-alert">
      <Alert
        type="error"
        alert="Translation Not Found"
        message="This content is not available in your requested locale"
      />
    </div>

    <script>
      // Nav Open button
      document.getElementById("sidebarOpen").addEventListener(
        "click",
        function () {
          var x = document.getElementById("sidebar");
          var y = document.getElementById("navigation");
          var p = document.getElementById("sidebarOpen");
          var q = document.getElementById("sidebarClose");

          x.style.display = "block";
          p.style.display = "none";
          q.style.display = "block";
          y.style.backgroundImage = "url(/images/navBg.webp)";

          document.body.style.width = "100%";
          document.body.style.position = "fixed";
          document.body.style.overflowY = "scroll";
        },
        false
      );

      // Nav Close button
      document.getElementById("sidebarClose").addEventListener(
        "click",
        function () {
          var x = document.getElementById("sidebar");
          var y = document.getElementById("navigation");
          var p = document.getElementById("sidebarOpen");
          var q = document.getElementById("sidebarClose");

          x.style.display = "none";
          p.style.display = "block";
          q.style.display = "none";
          y.style.background = "transparent";

          document.body.style.width = "auto";
          document.body.style.position = "static";
          document.body.style.overflowY = "auto";
        },
        false
      );

      window.addEventListener("resize", () => {
        if (window.innerWidth > 639) {
          document.body.style.width = "auto";
          document.body.style.position = "static";
          document.body.style.overflowY = "auto";
        } else {
          document.body.style.width = "100%";
          document.body.style.position = "fixed";
          document.body.style.overflowY = "scroll";
        }
      });

      // Language button toggle
      document.getElementById("langBtn").addEventListener(
        "click",
        function () {
          const langBtn = document.getElementById("langBtn"),
            dropdownMenu = document.getElementById("dropdownMenu");

          if (dropdownMenu.style.display == "block") {
            dropdownMenu.style.display = "none";
            langBtn.style.borderRadius = "25px";
          } else {
            dropdownMenu.style.display = "block";
            langBtn.style.borderRadius = "25px 25px 0 0";
          }
        },
        false
      );

      // Redirect function
      const redirectPath = (newLocale) => {
        let newPath;
        const localizedPathPattern = /^\/(nl|de)(\/[^]*)?$/,
          localeUrlPrefix = newLocale === "en" ? "" : `/${newLocale}`;

        if (localizedPathPattern.test(location.pathname)) {
          const [, , ...urlParts] = location.pathname.split("/");

          newPath = localeUrlPrefix + "/" + urlParts.join("/");
        } else {
          newPath = localeUrlPrefix + location.pathname;
        }

        location.pathname = newPath;
      };

      document.querySelectorAll(".lang-selector").forEach((langSelector) => {
        langSelector.addEventListener("click", () => {
          // @ts-ignore
          const { lang: locale } = langSelector;

          localStorage.setItem(`locale`, locale);

          redirectPath(locale);
        });
      });

      const searchParams = Object.fromEntries(
        new URL(location.href).searchParams
      );

      const { localeExists } = searchParams;

      if (localeExists === "false") {
        const translationNotFoundAlert = document.querySelector(
            ".translation-not-found-alert .alert"
          ),
          animationDuration =
            window.innerWidth > 1000 ? 1000 : window.innerWidth;

        // @ts-ignore
        translationNotFoundAlert.style.display = "flex";

        // @ts-ignore
        translationNotFoundAlert.animate(
          { right: ["-100%", "10vmin"] },
          animationDuration
          // @ts-ignore
        ).onfinish = () => (translationNotFoundAlert.style.right = "10vmin");
      }
    </script>
  </body>
</html>
