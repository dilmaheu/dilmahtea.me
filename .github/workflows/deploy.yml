on:
  push:
  workflow_dispatch:
    inputs:
      build_id:
        required: true
        type: string

name: Publish to Cloudflare Pages
run-name: Deploy ${{ github.ref_name }}  - ${{ github.event.head_commit.message || inputs.build_id }}

env:
  ASSETS_URL: ${{ github.ref_name == 'main' && secrets.PROD_ASSETS_URL || secrets.DEV_ASSETS_URL }}
  DB_URL: ${{ github.ref_name == 'main' && secrets.PROD_DB_URL || secrets.DEV_DB_URL }}
  ACCESS_TOKEN: ${{ github.ref_name == 'main' && secrets.PROD_ACCESS_TOKEN || secrets.DEV_ACCESS_TOKEN }}

jobs:
  publish:
    name: Publish to Cloudflare Pages
    runs-on: ubuntu-latest

    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: actions/cache@v3
        name: Setup astro-imagetools cache
        with:
          path: node_modules/.cache/astro-imagetools
          key: astro-imagetools-cache-${{ github.ref_name }}
          restore-keys: |
            astro-imagetools-cache-dev
            astro-imagetools-cache-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          directory: dist
          projectName: dilmahtea-me
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
